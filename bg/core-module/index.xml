<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>The Phoenix Flavour – Core Module</title><link>https://thephoenixflavour.com/bg/core-module/</link><description>Recent content in Core Module on The Phoenix Flavour</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><atom:link href="https://thephoenixflavour.com/bg/core-module/index.xml" rel="self" type="application/rss+xml"/><item><title>Bg: Step 1</title><link>https://thephoenixflavour.com/bg/core-module/step1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://thephoenixflavour.com/bg/core-module/step1/</guid><description>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Summary&lt;/h4>
&lt;blockquote>
&lt;p>This step covers all aspects of preparing the vanilla game, including creations, for modding with Mod Organizer 2.&lt;/p>
&lt;/blockquote>
&lt;/div>
&lt;p>This is the first step of the &lt;strong>Beginner&amp;rsquo;s Guide - Core Module&lt;/strong>. The Core Module is similar to a traditional guide in that it asks you to read closely and follow along with all its instructions as it takes you through the very basics of building a modded setup. It is aimed at complete newcomers to modding Skyrim.&lt;/p>
&lt;h2 id="requirements">Requirements&lt;/h2>
&lt;p>The Core Module requires the &lt;strong>Steam&lt;/strong> version of &lt;strong>Skyrim Special Edition&lt;/strong>. Whether you own the &lt;strong>Anniversary Edition DLC&lt;/strong> is irrelevant.&lt;/p>
&lt;p>You should have a file archiver like &lt;a href="https://www.7-zip.org/">7ZIP&lt;/a> installed and I also recommend using &lt;a href="https://notepad-plus-plus.org/downloads/">Notepad++&lt;/a> for modifying config files.&lt;/p>
&lt;h3 id="file-name-extensions">File Name Extensions&lt;/h3>
&lt;p>Make sure that &lt;strong>file name extensions&lt;/strong> are set to visible in Windows Explorer. This will enable you to tell apart files by their extensions which is fairly important.&lt;/p>
&lt;ul>
&lt;li>To see file name extensions, go into &lt;strong>Windows Explorer&lt;/strong>.&lt;/li>
&lt;li>In the &lt;strong>View&lt;/strong> tab/ribbon, make sure the &lt;strong>File name extensions&lt;/strong> box is ticked.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/file-name-extensions.png" alt="File Name Extensions">&lt;/p>
&lt;h2 id="clean-install">Clean Install&lt;/h2>
&lt;p>Please start by performing a &lt;a href="https://thephoenixflavour.com/bg/additional-modules/clean-install/">Clean Install&lt;/a>.&lt;/p>
&lt;h2 id="nexus-mods">Nexus Mods&lt;/h2>
&lt;p>The vast majority of mods and tools (including Mod Organizer 2) are hosted on &lt;a href="https://www.nexusmods.com/">Nexus Mods&lt;/a>. The Nexus supports hundreds of games though it should come as no surprise that the six games with the most downloads in total (by a wide margin) are the most recent Bethesda games.&lt;/p>
&lt;p>You will download many files from various Nexus pages throughout this guide and we will also talk about the site in general. In order to download mods, you must have an account.&lt;/p>
&lt;p>&lt;strong>If you do not have a &lt;a href="https://www.nexusmods.com/">Nexus Mods&lt;/a> account yet, go ahead and create one now.&lt;/strong>&lt;/p>
&lt;div class="alert alert-info" role="alert">
Read more about &lt;a href="https://thephoenixflavour.com/bg/knowledge-base/nexus-premium/">Nexus Premium&lt;/a>.
&lt;/div>
&lt;h2 id="mod-manager-choice">Mod Manager Choice&lt;/h2>
&lt;p>Learning how to mod Skyrim SE is largely about learning how to use the various tools to your advantage. Now that we have returned Skyrim to a pristine vanilla state, we can move on to installing the most important tool in our tool box.&lt;/p>
&lt;p>&lt;strong>Mod Organizer 2 (MO2)&lt;/strong> is a mod manager. Like its predecessor, &lt;a href="https://www.nexusmods.com/skyrim/mods/1334">Mod Organizer&lt;/a>, it is community-made and open-source, with a wide range of features catering specifically to advanced modders. If you are serious about building an extensive setup of mods, Mod Organizer 2 is going to be your best friend.&lt;/p>
&lt;p>&lt;strong>Using Mod Organizer 2 is &lt;u>mandatory&lt;/u> for this guide.&lt;/strong>&lt;/p>
&lt;div class="alert alert-info" role="alert">
You can check the &lt;a href="https://thephoenixflavour.com/bg/knowledge-base/mod-managers/">Mod Managers&lt;/a> article for more information about available mod managers and why I chose MO2.
&lt;/div>
&lt;p>Rather than list all the features of MO2 right now, I will slowly introduce them to you as we go. Many of its unique advantages would make very little sense to you before we have established some basic knowledge about modding in general. I will also gradually explain various elements of the UI as we go, so do not feel discouraged or overwhelmed when you first open the tool.&lt;/p>
&lt;h3 id="mod-organizer-2">Mod Organizer 2&lt;/h3>
&lt;p>Please follow all steps of the &lt;a href="https://thephoenixflavour.com/bg/additional-modules/mo2-setup/">MO2 Setup&lt;/a>.&lt;/p>
&lt;h3 id="ui-overview">UI Overview&lt;/h3>
&lt;p>Now you can get your first look at MO2. &lt;strong>If the interface seems daunting, do not feel discouraged!&lt;/strong> You will get used to it faster than you may think. Much of the UI simply makes a great deal of sense which is why it will quickly become easy to navigate.&lt;/p>
&lt;p>At this point, we are not going to discuss the purpose of the various parts of MO2&amp;rsquo;s interface: Without context, the details would be difficult to memorise. For now, please have a look at the five primary components of the UI which I will refer to from now on by the names defined below.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>(1) The toolbar&lt;/strong> allows you quick access to a number of sub menus.&lt;/li>
&lt;li>&lt;strong>(2) The profile drop-down&lt;/strong> allows quick switching between MO2 profiles.&lt;/li>
&lt;li>&lt;strong>(3) The executables drop-down&lt;/strong> is where you select and run executables like the game or a tool.&lt;/li>
&lt;li>&lt;strong>(4) The left pane&lt;/strong> is the mod order. This is where all your mods will appear once installed.&lt;/li>
&lt;li>&lt;strong>(5) The right pane&lt;/strong> contains various tabs like the Plugins tab for managing the load order.&lt;/li>
&lt;/ul>
&lt;div class="alert alert-warning" role="alert">
You will also see all Creation Club files that you own in MO2. They will be dealt with in the next step.
&lt;/div>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/mo2-ui-overview.png" alt="MO2 UI Overview">&lt;/p>
&lt;h2 id="creation-club">Creation Club&lt;/h2>
&lt;div class="alert alert-info" role="alert">
Read the &lt;a href="https://thephoenixflavour.com/bg/knowledge-base/creation-club/">Creation Club&lt;/a> article for more information.
&lt;/div>
&lt;p>Since the release of &lt;strong>Skyrim Anniversary Edition&lt;/strong>, everyone owns at least the following free creations:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>ccbgssse001-fish&lt;/strong> (Fishing)&lt;/li>
&lt;li>&lt;strong>ccbgssse025-advdsgs&lt;/strong> (Saints &amp;amp; Seducers)&lt;/li>
&lt;li>&lt;strong>ccbgssse037-curios&lt;/strong> (Rare Curios)&lt;/li>
&lt;li>&lt;strong>ccqdrsse001-survivalmode&lt;/strong> (Survival Mode)&lt;/li>
&lt;/ul>
&lt;p>&lt;u>These will always be installed alongside the game.&lt;/u>&lt;/p>
&lt;p>If you bought additional Creations, downloaded them when they were free, or bought the &lt;strong>Anniversary Edition DLC&lt;/strong>, they should have been downloaded upon launching the game.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;strong>Creations are official mods.&lt;/strong> We are going to organise them the same way we organise other mods, and for the same reasons.
&lt;/div>
&lt;p>Right now, the Creations are managed by Mod Organizer 2 just like the official DLC: They are always active and cannot be selectively disabled. Also, the names are verbose. We do not like this.&lt;/p>
&lt;h3 id="managing-creations">Managing Creations&lt;/h3>
&lt;p>Please follow all steps in the &lt;a href="https://thephoenixflavour.com/bg/additional-modules/managing-creations/">Managing Creations&lt;/a> module.&lt;/p>
&lt;h3 id="free-creations">Free Creations&lt;/h3>
&lt;p>Enable the four free creations by checking the boxes in MO2:&lt;/p>
&lt;ul>
&lt;li>Creation Club - Survival Mode&lt;/li>
&lt;li>Creation Club - Fishing&lt;/li>
&lt;li>Creation Club - Saints &amp;amp; Seducers&lt;/li>
&lt;li>Creation Club - Rare Curios&lt;/li>
&lt;/ul>
&lt;div class="alert alert-warning" role="alert">
If you own more creations, leave them disabled until after you have completed the Core Module.
&lt;/div>
&lt;h2 id="mo2-separators">MO2 Separators&lt;/h2>
&lt;p>Among the most useful features in MO2 for organising your mod order are &lt;strong>separators&lt;/strong>. They were highly requested by the community and eventually implemented by the MO2 team. Each separator can be placed anywhere in the mod order, its name and colour can be customised, mods can be grouped below it, and they can be collapsed or expanded at will.&lt;/p>
&lt;p>Below, you can see a picture of my visuals-only setup&amp;rsquo;s mod order to get an idea of how separators can help with organising several hundreds of mods:&lt;/p>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/aurora-mod-order.png" alt="Aurora mod order">&lt;/p>
&lt;h3 id="creating-separators">Creating Separators&lt;/h3>
&lt;p>At the top of our current mod order (left pane), you can see the three DLCs. We can group them under a separator of their own.&lt;/p>
&lt;ul>
&lt;li>Click the tools icon above the mod order and select &lt;strong>Create separator&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/mo2-create-separator.png" alt="Create Separator">&lt;/p>
&lt;ul>
&lt;li>Enter &lt;strong>Official Master Files&lt;/strong> as the name and click &lt;strong>OK&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;p>Your new separator will show up at the bottom of your mod order.&lt;/p>
&lt;ul>
&lt;li>Drag it up above the three DLC in the right pane.&lt;/li>
&lt;/ul>
&lt;p>We can also add a separator for the creations.&lt;/p>
&lt;ul>
&lt;li>Click the tools icon above the mod order and select &lt;strong>Create separator&lt;/strong>.&lt;/li>
&lt;li>Enter &lt;strong>Creation Club&lt;/strong> as the name and click &lt;strong>OK&lt;/strong>.&lt;/li>
&lt;li>Drag it up below the three DLC and above the creations in the right pane.&lt;/li>
&lt;/ul>
&lt;h3 id="separator-colours">Separator Colours&lt;/h3>
&lt;p>If you like you can also change the separator&amp;rsquo;s colour. You can do so by right-clicking it and clicking &lt;strong>Select Color&lt;/strong>. You can set the separator to any colour you like, it can be changed anytime, and every separator can have a different colour.&lt;/p>
&lt;p>Your colour choices should roughly match your MO2 theme for optimal readability: For instance, my colour scheme would be far too bright for anyone using dark mode.&lt;/p>
&lt;div class="alert alert-info" role="alert">
If you are also using the default MO2 theme, I can recommend this nice blue &lt;strong>#A9D5FF&lt;/strong> which I am using for my separators here.
&lt;/div>
&lt;h3 id="collapsing-separators">Collapsing Separators&lt;/h3>
&lt;p>Separators can be collapsed, hiding all the mods that were sorted underneath it. This is incredibly useful for large setups. &lt;strong>Double-click the Creation Club separator to collapse it&lt;/strong> - much better, right?&lt;/p>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/mo2-separators.png" alt="MO2 Separators">&lt;/p>
&lt;hr>
&lt;h4 id="please-continue-with-step-2bgcore-modulestep2">Please continue with &lt;a href="https://thephoenixflavour.com/bg/core-module/step2/">Step 2&lt;/a>.&lt;/h4></description></item><item><title>Bg: Step 2</title><link>https://thephoenixflavour.com/bg/core-module/step2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://thephoenixflavour.com/bg/core-module/step2/</guid><description>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Summary&lt;/h4>
&lt;blockquote>
&lt;p>This step covers the differences between the root and data folder, the files that belong in each of them, and how those files can be managed with Mod Organizer 2. It also covers the installation of the Skyrim Script Extender.&lt;/p>
&lt;/blockquote>
&lt;/div>
&lt;p>With the game freshly (re)installed and set up with Mod Organizer, we will now look at folder structures and how that affects mods.&lt;/p>
&lt;p>The unmodded, pristine version of Skyrim that we restored previously is referred to as &lt;strong>Vanilla Skyrim&lt;/strong>. It is about 12.7GB in size (plus up to 5.8GB for Creations) and located in a Steam library directory.&lt;/p>
&lt;h3 id="root-folder">Root Folder&lt;/h3>
&lt;p>Navigate to your Skyrim SE installation. The file path is &lt;code>\Steam\steamapps\common\Skyrim Special Edition\&lt;/code>.&lt;/p>
&lt;div class="alert alert-info" role="alert">
You can use &lt;a href="https://thephoenixflavour.com/Pictures/bg/mo2-open-game-folder.png">this shortcut&lt;/a> in Mod Organizer 2 to quickly locate the folder.
&lt;/div>
&lt;p>This is your &lt;strong>root folder&lt;/strong>. It contains the two executables: &lt;strong>SkyrimSE.exe&lt;/strong>, which directly opens the game, and &lt;strong>SkyrimSELauncher.exe&lt;/strong>, which starts the Launcher first. The latter is what Steam runs when you start the game through the Steam UI.&lt;/p>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/skyrim-root-folder.png" alt="Root Folder">&lt;/p>
&lt;h3 id="data-folder">Data Folder&lt;/h3>
&lt;p>The &lt;strong>data folder&lt;/strong> is located inside the &lt;strong>root folder&lt;/strong>. Open it now.&lt;/p>
&lt;p>The &lt;strong>data folder&lt;/strong> contains all game files which are split into &lt;strong>plugins (ESMs)&lt;/strong> and &lt;strong>archives (BSAs)&lt;/strong>. There are five &lt;strong>ESMs&lt;/strong> containing all game data and 18 &lt;strong>BSAs&lt;/strong> containing all assets. They are used by the engine to build the game.&lt;/p>
&lt;div class="alert alert-info" role="alert">
The five ESMs are also referred to as the &lt;strong>official master files&lt;/strong>.
&lt;/div>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/skyrim-data-folder.png" alt="Data Folder">&lt;/p>
&lt;h2 id="data-folder-files">Data Folder Files&lt;/h2>
&lt;p>The basic structure of mods is the same as the basic structure of the official game files.&lt;/p>
&lt;p>There are &lt;strong>plugins&lt;/strong> and &lt;strong>assets&lt;/strong>.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Plugins&lt;/strong> contain game data. They have the file extension &lt;strong>ESP&lt;/strong>, &lt;strong>ESL&lt;/strong>, or &lt;strong>ESM&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Assets&lt;/strong> are loose files. There are many kinds of assets, including textures, meshes, scripts, and so on.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Assets&lt;/strong> are often stored in &lt;strong>archives (BSAs)&lt;/strong>. You can think of BSAs as 7ZIP / WinRAR archives for Skyrim assets (textures, scripts, etc). They require a plugin of the same name in order to be loaded. All vanilla game BSAs are therefore loaded by &lt;strong>Skyrim.esm&lt;/strong>.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
Mods that are structured like the vanilla game files always belong in the data folder.
&lt;/div>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/diagrams/basic-mod-structure.png" alt="Mod Structure">&lt;/p>
&lt;h3 id="mod-managers">Mod Managers&lt;/h3>
&lt;p>Imagine this: You install 100 mods. Each of these mods consists of a different combination of plugins, archives, and loose files. You extract them all into the data folder. Many of them interact: They are patches or modifications for each other and therefore they contain some of the same files (as in: files with the same name). As you install these mods, they overwrite each other in the order of installation.&lt;/p>
&lt;p>Now you want to update or remove a mod. Oh, no.&lt;/p>
&lt;p>Unless you remember exactly which files belong to that mod and unless they never interacted with files from another mod, you now have a veritable situation on your hands. Fun issues that may ensue include &amp;ldquo;purple&amp;rdquo; objects or broken mechanics due to overwritten or missing assets. It is virtually impossible to build a functioning setup of even moderate dimensions in this fashion.&lt;/p>
&lt;p>That is why we use mod managers to manage data folder files. &lt;strong>Mod Organizer 2&lt;/strong> is particularly good at this.&lt;/p>
&lt;h3 id="mo2s-virtual-file-system">MO2&amp;rsquo;s Virtual File System&lt;/h3>
&lt;p>The developer of Mod Organizer 2, Tannin, came up with a clever way of avoiding data folder spaghetti: When you install a mod through MO2 it is extracted into its own folder rather than into the data folder. This way, files from different mods never clash.&lt;/p>
&lt;p>Here is the resulting folder structure:&lt;/p>
&lt;ul>
&lt;li>&lt;code>\Mod Organizer 2\mods\Mod 1\&amp;lt;files from mod 1&amp;gt;&lt;/code>&lt;/li>
&lt;li>&lt;code>\Mod Organizer 2\mods\Mod 2\&amp;lt;files from mod 2&amp;gt;&lt;/code>&lt;/li>
&lt;li>&lt;code>\Mod Organizer 2\mods\Mod 3\&amp;lt;files from mod 3&amp;gt;&lt;/code>&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;p>When you launch any application (a modding tool or the game itself) through Mod Organizer 2, it builds a &lt;strong>virtual data folder&lt;/strong> from the files in the separate folders at runtime.&lt;/p>
&lt;div class="alert alert-success" role="alert">
&lt;strong>This creates the concept of a mod order:&lt;/strong> All mods remain separate from each other. You will never lose track of files and any conflicts between mods (when they contain files of the same name) are visualised in Mod Organizer 2. You then review these files and decide which file should win the conflict by changing the order of the mods or selectively hiding/removing files.
&lt;/div>
&lt;p>And that is why Mod Organizer 2 is going to be your best friend. Cherish it!&lt;/p>
&lt;h3 id="viewing-the-data-folder">Viewing the Data Folder&lt;/h3>
&lt;p>You can check your virtual data folder in the &lt;strong>Data&lt;/strong> tab in the right pane in MO2.&lt;/p>
&lt;p>Below you can see your &lt;em>actual&lt;/em> data folder on the left (no creations, just vanilla files). On the right you can see your &lt;em>virtual&lt;/em> data folder as previewed by MO2 which &lt;em>does&lt;/em> include the creations as they are currently being managed by MO2.&lt;/p>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/virtual-data-folder.png" alt="VDF">&lt;/p>
&lt;h2 id="root-folder-files">Root Folder Files&lt;/h2>
&lt;p>Mod Organizer 2 exists to manage the contents of the &lt;strong>data folder&lt;/strong> which contains the vanilla game files and which is also where the vast majority of mods belong.&lt;/p>
&lt;p>What about the &lt;strong>root folder&lt;/strong>?&lt;/p>
&lt;p>&lt;u>Mods that do not belong into the data folder are rare.&lt;/u> They typically hook into the game&amp;rsquo;s engine in some way which is why they must be located in the same directory as the game&amp;rsquo;s executables, that is, the root folder.&lt;/p>
&lt;p>Standard procedure involves managing &lt;strong>data folder mods&lt;/strong> with a mod manager and dropping &lt;strong>root folder mods&lt;/strong> directly into the root folder. This works fine because there are far fewer root folder mods and they clash very rarely.&lt;/p>
&lt;p>That being said, there is an alternative that I strongly prefer and recommend.&lt;/p>
&lt;h3 id="root-builder">Root Builder&lt;/h3>
&lt;p>Enter &lt;strong>Root Builder&lt;/strong>, a plugin for Mod Organizer 2 which enables it to manage root folder mods.&lt;/p>
&lt;p>(You can think of MO2 plugins as mods for MO2. Yes, we are modding the mod manager.)&lt;/p>
&lt;p>What are the advantages of Root Builder?&lt;/p>
&lt;ul>
&lt;li>You can manage &lt;u>all mods&lt;/u> in Mod Organizer 2, keeping your Skyrim installation 100% clean and vanilla.
&lt;ul>
&lt;li>&lt;em>This means your setup is completely self-contained and can exist alongside any number of other modlists.&lt;/em>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>You can use MO2 functionality for version number tracking, custom notes, conflict management, etc.&lt;/li>
&lt;li>You can use MO2 as an ENB / ReShade manager, switching between presets painlessly while retaining modifications.&lt;/li>
&lt;/ul>
&lt;div class="alert alert-warning" role="alert">
Making &lt;strong>Root Builder&lt;/strong> optional is not currently feasible for this guide. While the plugin is not perfect, I believe that its benefits more than outweight the minor issues it sometimes causes.
&lt;/div>
&lt;div class="alert alert-primary" role="alert">
Please refer to the &lt;a href="https://thephoenixflavour.com/bg/additional-modules/root-builder/#installation">Root Builder&lt;/a> module for installation instructions.
&lt;/div>
&lt;h2 id="skyrim-script-extender">Skyrim Script Extender&lt;/h2>
&lt;p>With &lt;strong>Root Builder&lt;/strong> in place, we can install what is arguably the most important mod of all: The &lt;strong>Skyrim Script Extender&lt;/strong> (SKSE).&lt;/p>
&lt;div class="alert alert-primary" role="alert">
Please refer to the &lt;a href="https://thephoenixflavour.com/bg/additional-modules/skyrim-script-extender/">Skyrim Script Extender&lt;/a> module for more details and installation instructions.
&lt;/div>
&lt;h2 id="meta-files">Meta Files&lt;/h2>
&lt;p>When downloading mods from the Nexus, a &lt;strong>.meta&lt;/strong> file with various information about the mod will be downloaded alongside it and data from this meta file, like the mod&amp;rsquo;s URL, Nexus category, and version number, will be automatically extracted from the meta file when installing the mod through MO2. Some of this data is then displayed in the MO2 UI.&lt;/p>
&lt;p>The meta file will also automatically reflect the installation status of the mod in the &lt;strong>Downloads&lt;/strong> pane. Currently, the downloaded MO2 plugins and SKSE are listed as &amp;ldquo;Downloaded&amp;rdquo; rather than &amp;ldquo;Installed&amp;rdquo; because we installed them manually. Address Library is properly marked as &amp;ldquo;Installed&amp;rdquo; because we &lt;em>did&lt;/em> install it through the UI.&lt;/p>
&lt;p>(After uninstalling a mod, its archive will be listed as &amp;ldquo;Uninstalled&amp;rdquo; in the &lt;strong>Downloads&lt;/strong> tab.)&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;strong>The following instructions are optional.&lt;/strong> You can absolutely ignore this feature and skip ahead to &lt;a href="https://thephoenixflavour.com/bg/core-module/step3/">Step 3&lt;/a> as it is purely cosmetic.
&lt;/div>
&lt;p>I personally update my metas &lt;em>religiously&lt;/em> to keep track of which mods I have yet to install or update and which archives can be removed. The larger your setup the more important it is to be diligent in keeping MO2 clean.&lt;/p>
&lt;p>In this case, I will mark the manually installed mods as &amp;ldquo;Installed&amp;rdquo; by modifying their meta files.&lt;/p>
&lt;ul>
&lt;li>Right-click the &lt;strong>Curation Club&lt;/strong> archive in your &lt;strong>Downloads&lt;/strong> tab and select &lt;strong>Open Meta File&lt;/strong>.
&lt;ul>
&lt;li>&lt;em>You may have to choose an app. I recommend setting &lt;strong>Notepad++&lt;/strong> as the default.&lt;/em>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Change &lt;strong>installed&lt;/strong> from &lt;strong>false&lt;/strong> to &lt;strong>true&lt;/strong> near the bottom of the file.&lt;/li>
&lt;/ul>
&lt;div class="alert alert-info" role="alert">
Here you can also see the other data saved in the meta files, including version number, description, link, and more.
&lt;/div>
&lt;ul>
&lt;li>Save your change and close the file.&lt;/li>
&lt;li>Repeat the process for the &lt;strong>Root Builder&lt;/strong> and &lt;strong>Skyrim Script Extender&lt;/strong> meta files.&lt;/li>
&lt;/ul>
&lt;p>Order has been restored.&lt;/p>
&lt;h3 id="version-number">Version Number&lt;/h3>
&lt;p>Since we did not install the &lt;strong>Skyrim Script Extender&lt;/strong> through Mod Organizer 2, it did not import any data from the meta file. I do, however, like to use MO2 to keep track of version numbers and updates, so I am filling in the required data manually.&lt;/p>
&lt;ul>
&lt;li>Double-click &lt;strong>Skyrim Script Extender&lt;/strong> in your mod order.&lt;/li>
&lt;li>Switch to the &lt;strong>Nexus Info&lt;/strong> tab.&lt;/li>
&lt;li>Under &lt;strong>Mod ID&lt;/strong> enter &lt;strong>30379&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;p>You can find the ID for SKSE (and any other Nexus mod) in the respective URL (&lt;a href="https://thephoenixflavour.com/Pictures/bg/core-module/find-mod-id.png">reference picture&lt;/a>). This will allow Mod Organizer 2 to track the mod page and notify you about updates as well as enable the option to right-click the mod and quickly open the Nexus page.&lt;/p>
&lt;ul>
&lt;li>Under &lt;strong>Version&lt;/strong> enter the current version, i.e. &lt;strong>2.2.3&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;p>After you close the window again, the version number will appear properly in the &lt;strong>Versions&lt;/strong> column in the MO2 UI like it will for all mods that you install in the future.&lt;/p>
&lt;hr>
&lt;h4 id="please-continue-with-step-3bgcore-modulestep3">Please continue with &lt;a href="https://thephoenixflavour.com/bg/core-module/step3/">Step 3&lt;/a>.&lt;/h4></description></item><item><title>Bg: Step 3</title><link>https://thephoenixflavour.com/bg/core-module/step3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://thephoenixflavour.com/bg/core-module/step3/</guid><description>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Summary&lt;/h4>
&lt;blockquote>
&lt;p>This step covers the basic architecture of Bethesda plugins and how they can be modified.&lt;/p>
&lt;/blockquote>
&lt;/div>
&lt;h2 id="unofficial-skyrim-special-edition-patch">Unofficial Skyrim Special Edition Patch&lt;/h2>
&lt;p>We will start by installing an example mod.&lt;/p>
&lt;p>The &lt;strong>Unofficial Skyrim Special Edition Patch&lt;/strong> (USSEP) is an ambitious project aiming to squash the various bugs and inconsistencies never addressed by Bethesda. It is probably the single most popular Skyrim mod in existence.&lt;/p>
&lt;div class="alert alert-info" role="alert">
The USSEP is not without controversy. Many of its changes have been criticised for being out-of-scope which is rarely received well by the somewhat eccentric project lead. Nevertheless, I highly recommend the mod, especially to newcomers, because it does fix a lot and because not using it limits your options where other mods are concerned.
&lt;/div>
&lt;h3 id="new-separator">New Separator&lt;/h3>
&lt;p>First, we will add a new separator:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://thephoenixflavour.com/Pictures/bg/mo2-create-separator.png">Create a new separator&lt;/a> in MO2 and name it &lt;strong>Essential Mods&lt;/strong>.&lt;/li>
&lt;li>Leave it at the bottom of the left pane, below &lt;strong>Address Library for SKSE Plugins&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h3 id="ussep-installation">USSEP Installation&lt;/h3>
&lt;p>Now go ahead and grab the latest version from the Nexus:&lt;/p>
&lt;ul>
&lt;li>Download and install the &lt;a href="https://www.nexusmods.com/skyrimspecialedition/mods/266?tab=files">Unofficial Skyrim Special Edition Patch&lt;/a>.&lt;/li>
&lt;/ul>
&lt;div class="alert alert-info" role="alert">
The USSEP requires the four free creations which is why earlier instructions ensured they were installed and activated.
&lt;/div>
&lt;h2 id="plugins--load-order">Plugins &amp;amp; Load Order&lt;/h2>
&lt;p>&lt;strong>Plugins&lt;/strong> contain a variety of game data. For example, they determine an NPC&amp;rsquo;s hairstyle, where the NPC is placed in the game world, what it holds in its inventory, and much more.&lt;/p>
&lt;p>After enabling the USSEP, a new plugin will appear in the &lt;strong>Plugins&lt;/strong> tab in the right pane which is also called the &lt;strong>load order&lt;/strong>. Currently, the USSEP is at the bottom of the load order. All other files above are greyed out because they are official game files (vanilla and creations) because their load order position are hardcoded and cannot be changed.&lt;/p>
&lt;h3 id="dependencies">Dependencies&lt;/h3>
&lt;p>By adding one plugin as a &lt;strong>master&lt;/strong> to another plugin, you can modify its contents. However, the dependent plugin will now require its master to function. All plugins require at least &lt;strong>Skyrim.esm&lt;/strong> because most game data is defined in that plugin.&lt;/p>
&lt;div class="alert alert-info" role="alert">
Because all mods require one or more of the five vanilla ESMs they are known as the &lt;strong>official master files&lt;/strong>.
&lt;/div>
&lt;p>You can view a plugin&amp;rsquo;s masters by hovering over it in the MO2 UI:&lt;/p>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/ussep-masters.png" alt="USSEP Masters">&lt;/p>
&lt;p>If a master is missing, MO2 will promptly warn you. Uncheck one of the four free creations in the mod order to trigger the warning.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
A missing master is always a &lt;strong>critical issue&lt;/strong> and must be fixed.
&lt;/div>
&lt;p>(Remember to re-enable the creation.)&lt;/p>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/ussep-missing-masters.png" alt="USSEP Missing Masters">&lt;/p>
&lt;h2 id="sseedit">SSEEdit&lt;/h2>
&lt;p>In order to understand how plugins are structured, why they are dependent on their masters, and why missing masters are such a big deal, we need to have a proper look at their inner workings.&lt;/p>
&lt;p>While plugins can also be created and edited in Bethesda&amp;rsquo;s official modding tool, the &lt;strong>Creation Kit&lt;/strong>, the community-made &lt;strong>SSEEdit&lt;/strong> is much better suited for beginners to get an idea of how plugins are structured and how load order works.&lt;/p>
&lt;div class="alert alert-info" role="alert">
SSEEdit does not replace the Creation Kit, nor does the Creation Kit replace SSEEdit. The tool to use always depends on the type of plugin you are working on and what you are trying to do. For example, for the vast majority of tweaks, edits, and patches, SSEEdit is the way to go because it is very good at visualising conflicts and interactions.
&lt;/div>
&lt;p>Please refer to the &lt;a href="https://thephoenixflavour.com/bg/additional-modules/sseedit-setup/">SSEEdit Setup&lt;/a> module for installation instructions.&lt;/p>
&lt;h2 id="the-unwanted-effects-book">The Unwanted Effects Book&lt;/h2>
&lt;p>Equipped with SSEEdit and an example mod, we can now take a look at a practical example demonstrating how plugins are structured.&lt;/p>
&lt;p>Enter the &lt;strong>Unwanted Effects Book&lt;/strong>.&lt;/p>
&lt;p>Among vanilla Skyrim&amp;rsquo;s colourful assortment of bugs are certain active effects, applied by spells for instance, that may get &amp;ldquo;stuck&amp;rdquo; on the player after they are supposed to expire. The &lt;strong>Unofficial Skyrim Special Edition Patch&lt;/strong> fixes these effects, but it also adds an option for the player to rid themselves of any leftovers. Initially, this fix could be accessed through a shrine in the Temple of Kynareth in Whiterun, but was later moved to a book added to the player&amp;rsquo;s inventory upon loading the game. Following complaints about a lack of immersion, a compromise was finally reached by placing the book in the Temple of Kynareth.&lt;/p>
&lt;p>Using books or powers in order to access or customise a mod&amp;rsquo;s functionality was rather common before the Script Extender and SkyUI came along, although nowadays such options have largely been moved to dedicated mod configuration menus. With the release of Skyrim SE and the introduction of mods on consoles, many mod authors had to revert to these old workarounds as it is impossible to install files outside the data folder on consoles, and thus impossible to install the Skyrim Script Extender. The USSEP team does not want to move the option to an MCM or make it available only through the (in-game) console as that would not work for the XBOX and Playstation ports of the mod.&lt;/p>
&lt;p>However, for us PC players, the book is mostly redundant. If you ever find yourself stuck with an active effect, you can get the book through the console very easily, so there is no need to have it lying around in the game world or lugging it around with you. Does it really break immersion? Some players are vehemently opposed to having any sort mod config items in the world. Others probably never noticed the book in the first place.&lt;/p>
&lt;p>&lt;strong>Either way, disabling that book makes for a nice example edit, our first foray into the world of plugins.&lt;/strong>&lt;/p>
&lt;h3 id="more-informative-console">More Informative Console&lt;/h3>
&lt;p>When trying to locate and identify an item in the game, &lt;strong>More Informative Console&lt;/strong> is invaluable. It expands the console interface (which we already briefly looked at after installing SKSE) with a variety of helpful features that come in handy in the process of building a modded setup.&lt;/p>
&lt;ul>
&lt;li>Download and install &lt;a href="https://www.nexusmods.com/skyrimspecialedition/mods/19250?tab=files">More Informative Console&lt;/a>.
&lt;ul>
&lt;li>&lt;em>Pay attention and make sure to grab the correct version.&lt;/em>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Activate the mod in your mod order.&lt;/li>
&lt;/ul>
&lt;h3 id="finding-the-book">Finding the Book&lt;/h3>
&lt;p>Let&amp;rsquo;s go and have a look at that book, shall we?&lt;/p>
&lt;ul>
&lt;li>Select &lt;strong>Skyrim Script Extender&lt;/strong> from the MO2 executables drop-down and click &lt;strong>Run&lt;/strong>.&lt;/li>
&lt;li>In the main menu, open the &lt;strong>console&lt;/strong> (press the &lt;a href="https://thephoenixflavour.com/Pictures/bg/tilde.jpg">tilde key&lt;/a> above TAB on your keyboard).&lt;/li>
&lt;li>Type &lt;code>coc WhiterunTempleOfKynareth&lt;/code> and press &lt;strong>Enter&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;p>The &lt;code>coc&lt;/code> (center on cell) command is incredibly useful for testing. When used from the main menu, it will create a test character in your chosen cell with some basic equipment (check your inventory if you like).&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;strong>The coc command should be used for testing only.&lt;/strong> You will run into all kinds of issues if you try to use it for an actual playthrough as skipping the intro this way will cause many of the game&amp;rsquo;s (and mods&amp;rsquo;) scripts to never be properly initialised.
&lt;/div>
&lt;p>To find the book, go from where you spawned by the entrance to the temple into the sleeping area on the right. There is a bookcase just in front of you with the &lt;strong>USSEP Unwanted Effects Remover&lt;/strong> on the floor leaning against its side.&lt;/p>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/ussep-book-1.jpg" alt="USSEP Book 1">&lt;/p>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/ussep-book-2.jpg" alt="USSEP Book 2">&lt;/p>
&lt;p>Now we know where the book is. How does that help us?&lt;/p>
&lt;p>The USSEP plugin is big. It contains hundreds upon hundreds of records, and finding a single book among them sounds rather tedious. What you need is the book&amp;rsquo;s &lt;strong>Form ID&lt;/strong>, its unique identification number. To figure out that &lt;strong>Form ID&lt;/strong>, we installed &lt;strong>More Informative Console&lt;/strong>.&lt;/p>
&lt;ul>
&lt;li>Open the console once again and click on the book.&lt;/li>
&lt;/ul>
&lt;p>Here is what you should see:&lt;/p>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/ussep-book-3.png" alt="USSEP Book 3">&lt;/p>
&lt;p>Everything we could possibly need to know we can see at a glance thanks to the mod. Either take a screenshot (or simply refer to mine), then &lt;strong>save&lt;/strong> and &lt;strong>close&lt;/strong> the game. It is time to talk about &lt;strong>Form IDs&lt;/strong>.&lt;/p>
&lt;p>(Yes, a warning popped up in MO2. We will deal with it in due time.)&lt;/p>
&lt;h2 id="form-ids">Form IDs&lt;/h2>
&lt;p>Every object, NPC, magic effect, music track, etc, in the game is defined in a unique &lt;strong>record&lt;/strong> which is contained in a &lt;strong>plugin&lt;/strong>.&lt;/p>
&lt;div class="alert alert-info" role="alert">
For vanilla Skyrim, that is what the &lt;strong>official master files&lt;/strong> do: Each of the five plugins contains thousands of records, one for every &lt;em>thing&lt;/em> in the game: NPCs, magic effects, music tracks, and so forth.
&lt;/div>
&lt;p>&lt;strong>Every record has a unique Form ID to be identified by. No two Form IDs can ever be identical.&lt;/strong>&lt;/p>
&lt;p>Form IDs consist of 8 &lt;a href="https://en.wikipedia.org/wiki/Hexadecimal">hexadecimal&lt;/a> numbers (1-9 and A-F), for example &lt;code>070B1985&lt;/code>.&lt;/p>
&lt;p>The first two denote the &lt;strong>Index&lt;/strong> which refers to the load order position of the plugin that the record was initially defined in. They change depending on your load order.&lt;/p>
&lt;p>The remaining six numbers will always stay the same. This is why there can never be two plugins with duplicate Form IDs: No two plugins can be loaded in the same spot in the load order which means they will &lt;u>always&lt;/u> have a different index.&lt;/p>
&lt;p>(Unless they are ESLs which all load in slot 254, or FE. But we will get to that later.)&lt;/p>
&lt;h3 id="base-and-ref-form-id">Base and Ref Form ID&lt;/h3>
&lt;p>However, if we check the info we grabbed through More Informative Console, we will notice that the book has not one but &lt;em>two&lt;/em> Form IDs:&lt;/p>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/ussep-book-formid.png" alt="USSEP Book FormID">&lt;/p>
&lt;p>What&amp;rsquo;s up with that?&lt;/p>
&lt;p>The &lt;strong>Base Form ID&lt;/strong> is &lt;code>070B1985&lt;/code> and describes the book itself: It defines which model it uses, what its contents are, and, in this case, what script is attached to it.&lt;/p>
&lt;p>From the first two digits of the &lt;strong>Form ID&lt;/strong>, the &lt;strong>Index&lt;/strong>, you can tell that it is defined in the &lt;strong>Unofficial Skyrim Special Edition Patch.esp&lt;/strong> plugin. If you check the load order in Mod Organizer 2, the mod index of the USSEP plugin is &lt;code>07&lt;/code> which is identical to the index of the book&amp;rsquo;s &lt;strong>Base Form ID&lt;/strong>.&lt;/p>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/ussep-plugin-index.png" alt="USSEP Plugin Index">&lt;/p>
&lt;p>The &lt;strong>Ref Form ID&lt;/strong> is &lt;code>0190001B&lt;/code> and describes the book&amp;rsquo;s placement: That it is located in the &lt;code>WhiterunTempleofKynareth&lt;/code> cell, that it is enabled, how it is placed, and so on.&lt;/p>
&lt;p>The reason a second Form ID is needed is because you may have copies of the same object distributed throughout the game. While the book is unique right now, a Steel Sword would not be. There are dozens of hand-placed Steel Swords in Skyrim. Each of them has a unique REFR (reference) record with its unique Ref Form ID: They refer to the original item defined in the record with the Base Form ID.&lt;/p>
&lt;div class="alert alert-info" role="alert">
Because there are so many REFR records, SSEEdit is caching them to speed up its initial processing of records (RefCache).
&lt;/div>
&lt;h3 id="injected-records">Injected Records&lt;/h3>
&lt;p>As you may have noticed, the &lt;strong>Index&lt;/strong> for the book&amp;rsquo;s &lt;strong>Ref Form ID&lt;/strong> &lt;code>01&lt;/code> actually corresponds to &lt;strong>Update.esm&lt;/strong> instead of the USSEP plugin: It is an &lt;strong>injected record&lt;/strong>.&lt;/p>
&lt;p>This means that while the reference does not originate in Update.esm, another plugin modifying it would not have a missing master if the USSEP were not present as long as Update.esm was there. This is helpful for patchless compatibility.&lt;/p>
&lt;p>For example, a mod might change the interior of the Temple of Kynareth in such a way that the USSEP book is suddenly stuck in furniture, or otherwise inaccessible or in the way. The mod author could add the USSEP as a master to their plugin and move the book out of the way, but now their Temple of Kynareth mod would always require the USSEP.&lt;/p>
&lt;p>Alternatively, because the REFR record is an injected form, they could copy it into their own plugin and disable it. Record &lt;code>0190001B&lt;/code> is injected into Update.esm, and &lt;em>everyone&lt;/em> has Update.esm; hence, there would be no additional requirements. If the USSEP was present, the book would be removed. If the USSEP was not present, nothing would happen and there would be no errors.&lt;/p>
&lt;div class="alert alert-info" role="alert">
Moving the book instead of disabling would not be possible because the base record is not an injected form and cannot be referenced without adding the USSEP as a hard requirement. It would have to be replaced with a dummy item.
&lt;/div>
&lt;p>Injected records are inherently risky because, unlike with “normal” records, it is possible for duplicates to be present which can cause significant issues. Mod authors will only use injected records if there is no other way to ensure easy compatibility. &lt;a href="https://ck.uesp.net/wiki/Injected_Record_Registry">There is an (incomplete) list keeping track of them.&lt;/a>&lt;/p>
&lt;h2 id="records--layers">Records &amp;amp; Layers&lt;/h2>
&lt;p>Armed with all this theoretical knowledge on forms and records, we should fire up SSEEdit.&lt;/p>
&lt;ul>
&lt;li>Click the &lt;strong>SSEEdit&lt;/strong> icon in your toolbar to quickly launch it through MO2.&lt;/li>
&lt;li>If the changelog pops up, check &lt;strong>Don&amp;rsquo;t show again until changed&lt;/strong> and click &lt;strong>OK&lt;/strong>.&lt;/li>
&lt;li>If the dev message appears, check &lt;strong>Don&amp;rsquo;t show again for a while&lt;/strong> and click &lt;strong>Close&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;p>In the background, MO2 will be locked now. This will always happen when you launch tools through its interface to prevent you from changing anything in the virtual data folder while that is used by another tool.&lt;/p>
&lt;p>In &lt;strong>SSEEdit&lt;/strong>, you will see your &lt;strong>load order&lt;/strong> (&amp;ldquo;Module Selection&amp;rdquo;). All plugins should be checked by default, so go ahead and click &lt;strong>OK&lt;/strong>.&lt;/p>
&lt;p>SSEEdit will begin loading up your plugins which should not take too long since we already generated refcache for the official master files. You can follow the tool&amp;rsquo;s progress in the log. While SSEEdit loads your plugins, it will display random tips.&lt;/p>
&lt;p>Once it is done, SSEEdit will ask you about activating &lt;strong>ModGroups&lt;/strong>. This is because the USSEP comes with a ModGroup file that was now recognised by the tool. We will talk about ModGroups later; for now, leave the USSEP ModGroup disabled and click &lt;strong>OK&lt;/strong>.&lt;/p>
&lt;p>The SSEEdit log should now return &lt;code>Background Loader: finished&lt;/code>, so we can proceed.&lt;/p>
&lt;h3 id="sseedit-left-pane">SSEEdit Left Pane&lt;/h3>
&lt;p>In the left pane of SSEEdit, you can see your list of plugins, the load order.&lt;/p>
&lt;ul>
&lt;li>Double-click the &lt;strong>Unofficial Skyrim Special Edition Patch.esp&lt;/strong> to expand it.&lt;/li>
&lt;/ul>
&lt;p>The USSEP is &lt;em>huge&lt;/em>. You will immediately see a long list of record types unfolding, each of which contains dozens if not hundreds of individual records.&lt;/p>
&lt;ul>
&lt;li>Double-click the &lt;strong>Book&lt;/strong> category to expand it.&lt;/li>
&lt;li>Select the first record in the list, &lt;code>[00019514] DB07Journal &amp;quot;Cicero’s Journal - Final Volume&amp;quot;&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/ussep-book-details.png" alt="USSEP Book Details">&lt;/p>
&lt;p>From the index &lt;code>00&lt;/code> we can tell that the record originates in &lt;strong>Skyrim.esm&lt;/strong>. We can see the book&amp;rsquo;s full Form ID in the first column in the left pane of SSEEdit.&lt;/p>
&lt;p>The second column is the &lt;strong>Editor ID&lt;/strong> (EDID) which is &lt;code>DB07Journal&lt;/code>. This is another way to refer to a record (which is also used in scripts sometimes). Almost all records contain references to other records which consist of their EditorID, their Signature (the record category they belong to), and their Form ID.&lt;/p>
&lt;p>The third column displays the &lt;strong>Name&lt;/strong> of the record, i.e., &lt;code>Cicero’s Journal - Final Volume&lt;/code>, which is also the name you will see ingame. Not all records have names. Names are also not unique. They are easier to understand, but not always useful for identifying a record.&lt;/p>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/sseedit-columns-left.png" alt="xEdit">&lt;/p>
&lt;h3 id="layers--priority">Layers &amp;amp; Priority&lt;/h3>
&lt;p>Let&amp;rsquo;s have a look at the right pane now which displays more details.&lt;/p>
&lt;p>As you can see, both the right pane side and the record name in the left pane are highlighted in green. &lt;strong>Green means that the original record is overwritten by one or more plugins &lt;u>without&lt;/u> creating critical conflicts.&lt;/strong>&lt;/p>
&lt;p>You can see the original record as defined by Skyrim.esm in the first column, then the USSEP version in the second column. These columns correspond to the plugins and are sorted in the order of the plugins.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
Each of these columns can be thought of as a &lt;strong>layer&lt;/strong>. Each layer completely overwrites the earlier ones.
&lt;/div>
&lt;p>Imagine placing a stack of papers on your desk: You can only read the one on the top. Similarly, the Skyrim engine can only read the final layer that covers up the ones underneath. Here, the USSEP overwrites Skyrim.esm. You could now change anything you wanted in the Skyrim.esm layer; as long as the USSEP overwrote it, you would not see a change ingame.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
Plugins overwrite each other in the order they are loaded in. Skyrim will only read the final plugin.
&lt;/div>
&lt;p>Later on, with a larger load order, you may have multiple plugins overwriting a single record. Each of them may make a different change, but the engine will only read the one at the bottom of the load order and completely ignore the rest.&lt;/p>
&lt;p>&lt;strong>This is why patching is so important: It means consolidating all desired changes in one final layer.&lt;/strong>&lt;/p>
&lt;p>The actual change in our current example record is in the &lt;strong>Book Text&lt;/strong> which is conveniently highlighted in green in the USSEP column. You can double-click it to compare the changes with the original.&lt;/p>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/ussep-book-changes.png" alt="Book Changes">&lt;/p>
&lt;h2 id="disabling-the-ussep-book">Disabling the USSEP Book&lt;/h2>
&lt;p>We can easily find the book that we want to disable by searching for its unique Form ID:&lt;/p>
&lt;ul>
&lt;li>In the &lt;strong>Form ID&lt;/strong> search box above the load order, enter the book&amp;rsquo;s base ID &lt;code>070B1985&lt;/code> and press &lt;strong>Enter&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/sseedit-search-formid.png" alt="Search FormID">&lt;/p>
&lt;p>You will notice that, unlike the other book records, this one is displayed in white (highlighted blue in my screenshot because it is currently selected). &lt;strong>White records are records that are not overwritten:&lt;/strong> The book was newly added by the USSEP, it was defined in its plugin, and no other plugin affects it.&lt;/p>
&lt;div class="alert alert-info" role="alert">
Mod authors frequently prefix their &lt;strong>Editor IDs&lt;/strong> with their name or the mod name. This makes them easier to find.
&lt;/div>
&lt;p>So what are we going to do with the book?&lt;/p>
&lt;p>Theoretically we could simply right-click and delete the book&amp;rsquo;s base record. However, the reference record placing the book in the Temple of Kynareth links back to the book&amp;rsquo;s base record and would throw an error if the base record it references was deleted. These kinds of errors can cause crashes and other issues.&lt;/p>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/ussep-book-error.png" alt="Book Error">&lt;/p>
&lt;p>Instead, it is much better to leave the base record in place and disable the REFR record.&lt;/p>
&lt;h2 id="finding-the-refr">Finding the REFR&lt;/h2>
&lt;p>One way to find the REFR record would be to search for the Ref Form ID like we did before. However, there is another way of quickly tracking down referenced records:&lt;/p>
&lt;ul>
&lt;li>With the &lt;strong>USSEPUnwantedEffectsRemoverBook&lt;/strong> record selected, click the &lt;strong>Referenced By (1)&lt;/strong> tab at the bottom of the right pane.&lt;/li>
&lt;li>Double-click the one REFR record listed here to immediately switch to it.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/find-refr-records.png" alt="Find REFR">&lt;/p>
&lt;p>There we go. Under the blue highlight (because it is currently selected), the record in the left pane has no coloured background (meaning it is new and not overwritten) and in &lt;em>italics&lt;/em> (meaning it is injected):&lt;/p>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/ussep-book-ref.png" alt="Find REFR">&lt;/p>
&lt;p>Under &lt;strong>NAME - Base&lt;/strong> in the right pane, you can see the full name of the book record (consisting of EDID, Name, Signature, and BaseID). If you scroll further down, there is the &lt;strong>DATA - Position/Rotation&lt;/strong> section which defines the book&amp;rsquo;s exact placement. This would best be edited in the Creation Kit where you have a visual preview.&lt;/p>
&lt;p>Various other parameters are greyed out because they are unused.&lt;/p>
&lt;h3 id="creating-a-new-layer">Creating a new layer&lt;/h3>
&lt;p>While it is entirely possible to edit the REFR record directly, it would mean that you would have to do it all over again whenever the USSEP updated. For any edit like this (and later on for patches) I highly recommend creating new plugins instead of directly editing the mod(s) in question. It is also much easier to keep track of custom changes if they are in separate plugins.&lt;/p>
&lt;ul>
&lt;li>Right-click the &lt;strong>Unofficial Skyrim Special Edition Patch.esp&lt;/strong> column in the right pane.&lt;/li>
&lt;li>Select &lt;strong>Copy as override into &amp;hellip;&lt;/strong> to copy the layer into another plugin.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/sseedit-create-layer.png" alt="Create Layer">&lt;/p>
&lt;p>The &lt;a href="https://thephoenixflavour.com/Pictures/bg/core-module/sseedit-warning-window.png">warning window&lt;/a> that now appears will always show up the first time you edit anything in an SSEEdit session. It can be turned off and I recommend doing that eventually.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
When making changes, it is important to know that &lt;strong>there is no &amp;ldquo;Undo&amp;rdquo; button in SSEEdit&lt;/strong>. If you make a mistake, you need to restore the previous state manually or close without saving your changes and start over. It is possible to save manually during a longer session.
&lt;/div>
&lt;ul>
&lt;li>Click &lt;strong>Yes I&amp;rsquo;m absolutely sure&lt;/strong> to acknowledge the warning and proceed.&lt;/li>
&lt;li>A new window will pop up with various different plugins that the record can be copied into.&lt;/li>
&lt;li>Check the &lt;strong>&amp;lt;new file&amp;gt;.esp&lt;/strong> option &lt;u>without ESM or ESL&lt;/u> and click &lt;strong>OK&lt;/strong>.&lt;/li>
&lt;li>Enter &lt;strong>Disable USSEP Book&lt;/strong> as the name of the new plugin and click &lt;strong>OK&lt;/strong> once more.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/sseedit-new-plugin.png" alt="New Plugin">&lt;/p>
&lt;p>A new plugin was created and will appear at the bottom of the plugin list in the left pane.&lt;/p>
&lt;p>Scroll down and expand its &lt;strong>Cell&lt;/strong> records until you find the REFR record added by the USSEP. As you can see it is highlighted in green since the original record was overwritten now:&lt;/p>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/ussep-book-itm.png" alt="Book ITM">&lt;/p>
&lt;h3 id="identical-to-master">Identical to Master&lt;/h3>
&lt;p>In the new plugin, the font colour is grey instead of purple. &lt;strong>That means the record is an ITM, or Identical to Master.&lt;/strong>&lt;/p>
&lt;p>The master for the REFR record is &lt;strong>Update.esm&lt;/strong> (because it is an injected form) and the master for the book referenced in the REFR record is the USSEP (because the book record originates in the USSEP). For that reason, both the USSEP and Update.esm are required. Skyrim.esm is also added as a master to any new plugin.&lt;/p>
&lt;p>You can see the full list of masters if you click on &lt;strong>File Header&lt;/strong>.&lt;/p>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/ussep-book-masters.png" alt="Book ITM">&lt;/p>
&lt;p>Because nothing has (yet) been changed in the new layer, it is still &lt;em>identical to all its masters&lt;/em> and therefore an &lt;strong>ITM&lt;/strong>. ITMs are often (but not always) unnecessary and potentially disruptive (because they can override and negate other mods&amp;rsquo; changes) which is why they usually merit further investigation.&lt;/p>
&lt;p>This particular record will, of course, be modified.&lt;/p>
&lt;h3 id="adding-a-record-flag">Adding a record flag&lt;/h3>
&lt;p>In order to disable the book ingame, we can use a &lt;strong>Record Flag&lt;/strong>. Scroll up to the top of the record in the right pane to find the &lt;strong>Record Flags&lt;/strong> line which is currently empty.&lt;/p>
&lt;ul>
&lt;li>Right-click the empty space next to &lt;strong>Record Flags&lt;/strong> and select &lt;strong>Edit&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/sseedit-add-record-flag.png" alt="Add Record Flag">&lt;/p>
&lt;p>A new window will pop up with a list of options that you can check. Near the top of that list is a &lt;strong>Delete&lt;/strong> option which is not the one you should choose. Flagging records as deleted will cause crashes if they are referenced by other records and it is considered best practice to always use the &lt;strong>Initially Disabled&lt;/strong> flag instead.&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;strong>Initially Disabled&lt;/strong> means a record can potentially be re-enabled by a script later on. For example, certain coffins are flagged as initially disabled. If an NPC dies, their coffin in the Hall of the Dead of their home city will be enabled and thus become visible to the player.
&lt;/div>
&lt;ul>
&lt;li>Check the box for &lt;strong>Initially Disabled&lt;/strong> and click &lt;strong>OK&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/initially-disabled-flag.png" alt="Disable Flag">&lt;/p>
&lt;h3 id="saving-your-changes">Saving your changes&lt;/h3>
&lt;p>Saving changes made in SSEEdit is a slightly unintuitive process: You actually have to &lt;em>close&lt;/em> the tool to be prompted to save what you changed (unless you save manually).&lt;/p>
&lt;ul>
&lt;li>Close &lt;strong>SSEEdit&lt;/strong> (click the red X in the upper right corner).&lt;/li>
&lt;li>A window with all plugins edited in that session will pop up. Only the &lt;strong>Disable USSEP Book.esp&lt;/strong> should be listed here.&lt;/li>
&lt;li>Make sure that the new plugin we created is checked and click &lt;strong>OK&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h2 id="the-overwrite">The Overwrite&lt;/h2>
&lt;p>Whenever a file is generated by a tool that is run through Mod Organizer 2, it will &amp;lsquo;catch&amp;rsquo; these files in a folder called the &lt;em>&lt;strong>Overwrite&lt;/strong>&lt;/em>. That, as it happens, is where our new plugin ended up, and it is why &lt;a href="https://thephoenixflavour.com/Pictures/bg/core-module/overwrite-warning.png">a warning popped up in MO2&lt;/a>.&lt;/p>
&lt;p>The &lt;em>&lt;strong>Overwrite&lt;/strong>&lt;/em> is located at the bottom of the mod folder which means its contents will &lt;u>always&lt;/u> overwrite the rest of the mod order (hence the name). Because it always overwrites, the &lt;em>&lt;strong>Overwrite&lt;/strong>&lt;/em> should &lt;u>never&lt;/u> be more than a temporary location that is cleaned up as soon as possible.&lt;/p>
&lt;div class="alert alert-info" role="alert">
The actual location of the &lt;em>&lt;strong>Overwrite&lt;/strong>&lt;/em> accessible through the MO2 UI is &lt;code>\Mod Organizer 2\overwrite\&lt;/code>.
&lt;/div>
&lt;ul>
&lt;li>Double-click the &lt;em>&lt;strong>Overwrite&lt;/strong>&lt;/em> at the bottom of your mod order to open it.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/overwrite-contents.png" alt="Overwrite Contents">&lt;/p>
&lt;h3 id="managing-overwrite-files">Managing Overwrite Files&lt;/h3>
&lt;p>Since we only have a single file in the &lt;em>&lt;strong>Overwrite&lt;/strong>&lt;/em>, we can very easily convert its content into a new mod:&lt;/p>
&lt;ul>
&lt;li>Close the &lt;em>&lt;strong>Overwrite&lt;/strong>&lt;/em> window again.&lt;/li>
&lt;li>Right-click the &lt;em>&lt;strong>Overwrite&lt;/strong>&lt;/em> and select &lt;strong>Create Mod&lt;/strong>.&lt;/li>
&lt;li>Name it &lt;strong>Disable USSEP Book&lt;/strong> and click &lt;strong>OK&lt;/strong>.&lt;/li>
&lt;li>Move your new mod directly below the &lt;strong>Unofficial Skyrim Special Edition Patch&lt;/strong> and activate it.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/overwrite-create-mod.png" alt="Overwrite Contents">&lt;/p>
&lt;h2 id="ingame-test">Ingame Test&lt;/h2>
&lt;p>Now that we have created our first plugin tweak and cleaned everything up, it is time to jump in-game again to check if the plugin works as intended.&lt;/p>
&lt;ul>
&lt;li>Launch the &lt;strong>Skyrim Script Extender&lt;/strong> through Mod Organizer 2.&lt;/li>
&lt;li>Select &lt;strong>Continue&lt;/strong> in the main menu to load your previously created save.&lt;/li>
&lt;/ul>
&lt;p>And &amp;hellip; gone!&lt;/p>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/ussep-book-removed.jpg" alt="Overwrite Contents">&lt;/p>
&lt;h3 id="conclusion">Conclusion&lt;/h3>
&lt;p>You may wonder why we went through the process of digging through SSEEdit to disable a completely inconsequential feature before we even talked about load order and plugin types.&lt;/p>
&lt;p>&lt;strong>This step was never about the book.&lt;/strong>&lt;/p>
&lt;p>With everything we learned about plugins, dependencies, and layers, &lt;strong>load order&lt;/strong> should be more than a theoretical concept now. It is a tangible thing that you have seen in action. You looked at records and edits, you created your own overwriting layer to make a change, and you saw the in-game effect.&lt;/p>
&lt;p>When we discuss plugin types and load order in the next step, these concepts will hopefully make more sense with the knowledge on plugin structure that we have now gained.&lt;/p>
&lt;hr>
&lt;h4 id="please-continue-with-step-4bgcore-modulestep4">Please continue with &lt;a href="https://thephoenixflavour.com/bg/core-module/step4/">Step 4&lt;/a>.&lt;/h4></description></item><item><title>Bg: Step 4</title><link>https://thephoenixflavour.com/bg/core-module/step4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://thephoenixflavour.com/bg/core-module/step4/</guid><description>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Summary&lt;/h4>
&lt;blockquote>
&lt;p>This step covers the three plugin types (ESP, ESM, ESL), their differences, and how one can be converted to another with special emphasis on creating ESLs.&lt;/p>
&lt;/blockquote>
&lt;/div>
&lt;h2 id="plugin-types">Plugin Types&lt;/h2>
&lt;p>You may have noticed that we have plugins with three different extensions in our load order.&lt;/p>
&lt;ul>
&lt;li>Skyrim.&lt;strong>esm&lt;/strong>&lt;/li>
&lt;li>ccBGSSSE037-Curios.&lt;strong>esl&lt;/strong>&lt;/li>
&lt;li>Unofficial Skyrim Special Edition Patch.&lt;strong>esp&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>ESP&lt;/strong>, &lt;strong>ESM&lt;/strong>, and &lt;strong>ESL&lt;/strong> files are Bethesda plugins. They share the same basic structure of records with Form IDs arranged in layers and overwrite each other according to their load order.&lt;/p>
&lt;p>There are, however, notable differences between them which we will discuss in this step.&lt;/p>
&lt;h2 id="esp-and-esm-plugins">ESP and ESM Plugins&lt;/h2>
&lt;p>&lt;strong>Elder Scrolls Plugins&lt;/strong> (ESP) like our previously created &lt;strong>Disable USSEP Book.esp&lt;/strong> are the most common type of plugin. If you create a mod in the Creation Kit, it will be exported in this format and most plugin-based mods use a simple ESP. In the load order in MO2 they will appear without any text decoration (like bold or italic).&lt;/p>
&lt;p>&lt;strong>Elder Scrolls Master&lt;/strong> plugins (ESM) appear in &lt;em>&lt;strong>bold italics&lt;/strong>&lt;/em> in Mod Organizer 2 - see, for example, the official master files. They will always load above ESPs and therefore ESPs will always overwrite them in case of conflicts. If you try to swap the load order of the USSEP and our modification for it in MO2 you will notice that you cannot place an ESP above an ESM.&lt;/p>
&lt;h3 id="plugin-limit">Plugin Limit&lt;/h3>
&lt;p>&lt;strong>The total number of ESM and ESP plugins in your load order cannot exceed 256 plugins.&lt;/strong>&lt;/p>
&lt;p>This is due to the hexadecimal system used to define them: Each plugin&amp;rsquo;s &lt;strong>Index&lt;/strong> (the first two characters in their form ID) is made up of a combination of two numbers and letters which in turn is based on their load order. The hexadecimal system has 16 unique characters and there are exactly 256 possible combinations for two characters from 00 to FF (see table below).&lt;/p>
&lt;p>The hexadecimal &lt;strong>FF&lt;/strong> is the decimal &lt;strong>255&lt;/strong>, so the maximum amount of plugins from 0 (00) to 255 (FF) is 256.&lt;/p>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/hexadecimalchart.png" alt="Hexadecimal Chart">&lt;/p>
&lt;p>In Skyrim LE the plugin limit could be overcome by merging the records of multiple plugins into a single one.&lt;/p>
&lt;p>In Skyrim SE plugin merging has become redundant for all but the largest of load orders thanks to the new ESL format of plugins introduced with the 2016 engine update.&lt;/p>
&lt;h2 id="esl-plugins">ESL Plugins&lt;/h2>
&lt;p>&lt;strong>Elder Scrolls Light&lt;/strong> plugins (ESL) were initially added for the Creation Club (Fallout 4 and Skyrim SE) and they were a game-changer for the modding scene because the plugin limit for ESLs is about ten times that as for ESPs and ESMs.&lt;/p>
&lt;p>All ESL plugins have the index &lt;code>FE:xxx&lt;/code>. The hexadecimal FE is the decimal 254, so &lt;strong>all ESL plugins load in plugin slot 254.&lt;/strong>&lt;/p>
&lt;p>This is possible because their index was extended to the third, fourth, and fifth character in their eight character form ID: An ESL&amp;rsquo;s index could be &lt;code>FE:000&lt;/code> or &lt;code>FE:08F&lt;/code>. Thus, &lt;strong>the limit for ESLs is a whopping 4096 plugins&lt;/strong> - which is why we no longer need to merge plugins.&lt;/p>
&lt;h3 id="plugin-capacity">Plugin Capacity&lt;/h3>
&lt;p>The downside of ESLs is that they can store fewer records.&lt;/p>
&lt;p>Remember that each record must have a unique Form ID. ESLs only have three digits left for a combination of the 16 hexadecimal characters whereas ESPs and ESMs have six digits. This means every ESL can only store 4096 unique Form IDs of which the first 2048 are reserved by the engine.&lt;/p>
&lt;p>The remaining 2048 slots are still more than enough for small- to medium-size mods. Many separate ESL plugins are infinitely easier to handle than a few big plugin merges (imagine having many small drawers for screws of different types and sizes instead of dumping all of them into a single big drawer).&lt;/p>
&lt;p>Additionally, this limit only affects &lt;u>new&lt;/u> records, i.e., records defined in the ESL plugin. There is no limit on how many records defined in &lt;em>other&lt;/em> plugins an ESL can hold. Many mods, especially patches, function mostly by editing existing (vanilla or mod-added) records and adding few or no new records of their own. These types of plugins are especially suited to being ESL-ified.&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;strong>Summary:&lt;/strong> You can install up to &lt;u>4096&lt;/u> ESL plugins which can contain up to &lt;u>2048&lt;/u> new records / Form IDs each.
&lt;/div>
&lt;h2 id="hybrid-plugins">Hybrid Plugins&lt;/h2>
&lt;p>We learned that &lt;strong>ESM&lt;/strong> plugins are distinguished in the load order by being displayed in &lt;em>&lt;strong>bold italics&lt;/strong>&lt;/em>.&lt;/p>
&lt;p>But here is something strange: The &lt;strong>Unofficial Skyrim Special Edition Patch.esp&lt;/strong> is displayed in &lt;em>&lt;strong>bold italics&lt;/strong>&lt;/em> in our MO2 load order tab when it actually has the ESP file extension.&lt;/p>
&lt;p>So, is it an ESM or an ESP? Actually, it is both. This is where &lt;strong>Plugin Flags&lt;/strong> come into play.&lt;/p>
&lt;div class="alert alert-info" role="alert">
Plugins can either be a full ESP, ESL, or ESM, &lt;strong>OR&lt;/strong> they can be any combination of the three.
&lt;/div>
&lt;p>That sounds a little confusing, so let&amp;rsquo;s break it down.&lt;/p>
&lt;h3 id="esm-esl">ESM-ESL&lt;/h3>
&lt;p>Imagine you created a mod that is a resource to be used by other mods: It just contains a few keywords, maybe a dozen records. You can easily use the ESL format for this plugin.&lt;/p>
&lt;p>However, your resource is also a &lt;strong>master&lt;/strong> to various dependent plugins which should be lower in the mod order, so preferably your plugin should load very early. It therefore makes sense to flag it as an ESM to automatically place it in the ESM space at the top of the load order.&lt;/p>
&lt;p>The result is an &lt;strong>ESM-ESL&lt;/strong> which will show up as &lt;em>&lt;strong>Example.esl&lt;/strong>&lt;/em> in the load order - like &lt;em>&lt;strong>ccBGSSSE037-Curios.esl&lt;/strong>&lt;/em>.&lt;/p>
&lt;div class="alert alert-info" role="alert">
ESM-ESL plugins are also called &lt;strong>Light Masters&lt;/strong>. Most creations use this format, with the exception of those that require for Form IDs which are full ESMs instead.
&lt;/div>
&lt;h3 id="esm-esp">ESM-ESP&lt;/h3>
&lt;p>Now imagine your example mod is definitely one that should load very early to be overwritten by other mods but you have far too many original Form IDs to use the ESL format.&lt;/p>
&lt;p>In that case, you can either opt for a full ESM or an ESP that is flagged as an ESM, that is, an &lt;strong>ESM-ESP&lt;/strong> - like the &lt;em>&lt;strong>Unofficial Skyrim Special Edition Patch.esp&lt;/strong>&lt;/em>.&lt;/p>
&lt;div class="alert alert-info" role="alert">
To my knowledge, there is no functional difference between a regular ESM and an ESM-ESP.
&lt;/div>
&lt;h3 id="esp-esl">ESP-ESL&lt;/h3>
&lt;p>Finally, you may have a plugin that is just fine to load in ESP space because it is not intended as a sort of baseline or framework. If it does not contain many new Form IDs, you can usually flag the plugin as an ESL, turning it into an &lt;strong>ESP-ESL&lt;/strong> or &lt;strong>ESP-FE&lt;/strong> (because ESLs always have an Index beginning with FE).&lt;/p>
&lt;p>Which plugins can be flagged as ESL and how this can be done will be discussed in the following steps.&lt;/p>
&lt;h2 id="creating-an-esl">Creating an ESL&lt;/h2>
&lt;p>Should you ever find yourself reaching the ESP/ESM plugin limit, you will no longer be able to launch the game - try to avoid that.&lt;/p>
&lt;p>You can track your plugins via the neat little counter above your load order (hover for details):&lt;/p>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/plugin-counter.png" alt="Plugin Counter">&lt;/p>
&lt;p>With 9 plugins currently counting toward the 256 hard limit, we are in no danger of breaking the game anytime soon. Then again, load orders have the tendency to balloon to obscene dimensions so it is tends to be a good idea to ESL-ify as many plugins as possible.&lt;/p>
&lt;div class="alert alert-info" role="alert">
Plugins with few or no original records, like patches that mostly modify other mods, are best suited to the ESL format.
&lt;/div>
&lt;p>Hey, that sounds like our &lt;strong>Disable USSEP Book.esp&lt;/strong> which only modifies a single reference.&lt;/p>
&lt;ul>
&lt;li>Load up your load order in SSEEdit.&lt;/li>
&lt;/ul>
&lt;h3 id="plugin-header">Plugin Header&lt;/h3>
&lt;p>Plugin Type is determined by file extension and plugin flags. You can see the file extension in the left pane and plugin flag(s) in the &lt;strong>Plugin Header&lt;/strong> which is what you see when you select a plugin in SSEEdit.&lt;/p>
&lt;p>Below, you can see the &lt;strong>Plugin Header&lt;/strong> of our &lt;strong>Disable USSEP Book.esp&lt;/strong>. It is a bog-standard ESP, so there are no plugin flags (or Record Flags as they are called here).&lt;/p>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/esp-plugin-header.png" alt="ESP Plugin Header">&lt;/p>
&lt;p>If you select the &lt;strong>Unofficial Skyrim Special Edition Patch.esp&lt;/strong>, you will see that it is flagged as an &lt;strong>ESM&lt;/strong>.&lt;/p>
&lt;p>Two of the CC plugins, &lt;strong>ccBGSSSE037-Curios.esl&lt;/strong> and &lt;strong>ccQDRSSE001-SurvivalMode.esl&lt;/strong>, are additionally flagged as &lt;strong>ESLs&lt;/strong>.&lt;/p>
&lt;h3 id="esl-flagging">ESL-Flagging&lt;/h3>
&lt;p>Going back to our &lt;strong>Disable USSEP Book.esp&lt;/strong>, we can now simply turn it into an ESL (that is, an ESP-ESL because it still has the ESP file extension) by adding the flag.&lt;/p>
&lt;ul>
&lt;li>In the &lt;strong>Plugin Header&lt;/strong>, right-click the empty space under &lt;strong>Record Flags&lt;/strong> and select &lt;strong>Edit&lt;/strong>.&lt;/li>
&lt;li>Confirm when the warning window pops up.&lt;/li>
&lt;li>Check the box for &lt;strong>ESL&lt;/strong> and click &lt;strong>OK&lt;/strong>.&lt;/li>
&lt;li>Close SSEEdit. Make sure &lt;strong>Disable USSEP Book.esp&lt;/strong> is checked and click &lt;strong>OK&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/esl-flag-plugin.png" alt="ESL Flag">&lt;/p>
&lt;p>Back in MO2, our plugin now appears in &lt;em>italics&lt;/em> in the load order and the little yellow icon 🟡 that appeared in the &lt;strong>Flags&lt;/strong> column for the plugin confirms that it is ESL-flagged. You can also check this by hovering over it. And, of course, you can see the &lt;strong>FE&lt;/strong> index.&lt;/p>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/esl-flag-mo2.png" alt="ESL Flag">&lt;/p>
&lt;h2 id="esm-space-and-references">ESM Space and References&lt;/h2>
&lt;p>A major differences between plugins in ESM and ESP space is how references are handled.&lt;/p>
&lt;div class="alert alert-info" role="alert">
Full ESLs are always ESM-flagged and therefore load in ESM space.
&lt;/div>
&lt;h3 id="persistent-vs-temporary">Persistent vs Temporary&lt;/h3>
&lt;p>There are two types of references:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Temporary references&lt;/strong> only load into memory when the player is close by and are unloaded when they are no longer needed.&lt;/li>
&lt;li>&lt;strong>Persistent references&lt;/strong> are always loaded into memory upon launching the game, regardless of player proximity.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/temporary-persistent-refs.png" alt="Refs">&lt;/p>
&lt;p>The cap for references that are active at the same time is 1048576, anything above that will cause issues and instability.&lt;/p>
&lt;p>The way references are handled is the most important difference between plugins in ESP space (.ESP with or without ESL flag) and plugins in ESM space (any plugin with ESM-flag: ESM, ESL, ESM-ESP). &lt;strong>Temporary references in ESP space are actually handled like persistent references and always loaded at the start of the game.&lt;/strong> You can see how adding a great number of temporary references to ESP plugins could quickly bring the overall amount of active references closer to the cap.&lt;/p>
&lt;p>Temporary references defined in ESM space but overwritten by a plugin in ESP space will also be always active. This makes sense if you think about how layers work and how the game only really cares about the one that overwrites.&lt;/p>
&lt;div class="alert alert-info" role="alert">
Large mods that add their own worldspaces and / or overhaul the vanilla ones by adding or modifying many references should be ESM-ified so that their considerable number of temporary references is not always active.
&lt;/div>
&lt;p>(There is a mod which will warn you when you approach the active references cap, we will install it later.)&lt;/p>
&lt;h3 id="moving-into-esm-space">Moving into ESM Space&lt;/h3>
&lt;p>The book disabled in our custom plugin is a temporary reference. While I am not sure if an &lt;em>initially disabled&lt;/em> reference is still being loaded, we are going to pretend it is for the sake of the argument.&lt;/p>
&lt;p>Right now, our plugin is an ESP-FE so all references it contains are loaded, regardless of whether they are temporary or persistent.&lt;/p>
&lt;p>Since it is already flagged as an ESL, the only missing piece to make it a full ESL is the file extension.&lt;/p>
&lt;ul>
&lt;li>Double-click &lt;strong>Disable USSEP Book&lt;/strong> in your mod order and switch to the &lt;strong>Filetree&lt;/strong> tab.&lt;/li>
&lt;/ul>
&lt;p>(This view is where you can see the contents of the mod folder.)&lt;/p>
&lt;ul>
&lt;li>Rename the file extension of the plugin to &lt;strong>.esl&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/esp-to-esl.png" alt="ESP to ESL">&lt;/p>
&lt;p>After renaming a plugin (name or file extension), MO2 will disable in the load order, so make sure to enable it again.&lt;/p>
&lt;p>The plugin is now being recognised as a full ESL which means it belongs in ESM space. Where before you were unable to change its load order position, you can now drag it above the USSEP which is also in ESM space. Of course, the book plugin should stay &lt;u>below&lt;/u> the USSEP plugin because it requires that as a master and plugins must always load below their masters.&lt;/p>
&lt;p>Let&amp;rsquo;s hop into the game to make sure this worked. You know the drill: Use &lt;code>coc whiteruntempleofkynareth&lt;/code> from the main menu to quickly jump to the correct cell, then check the room to the left.&lt;/p>
&lt;p>But, oh no! The book is back. What could possibly have gone wrong?&lt;/p>
&lt;h3 id="onam-records">ONAM Records&lt;/h3>
&lt;p>Turning an ESL-flagged ESP into a full ESL by changing the file extension works in 99% of cases - unless the plugin overwrites a reference. When that is the case, the affected references have to be added to the list of &lt;strong>Overriden Forms (ONAM)&lt;/strong> in the plugin header.&lt;/p>
&lt;p>If you create an ESM space plugin or flag a plugin as ESM in SSEEdit, this happens automatically. Unfortunately, we cheated a little by simply changing the file name extension so we are actually missing the ONAM entries which means the game skips our plugin&amp;rsquo;s modification to the temporary reference.&lt;/p>
&lt;ul>
&lt;li>Load up your plugins in SSEEdit.&lt;/li>
&lt;li>Select the &lt;strong>Disable USSEP Book.esl&lt;/strong> to view its &lt;strong>Plugin Header&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;p>Here, you can see that the ONAM sub record is empty.&lt;/p>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/missing-onams.png" alt="Missing ONAMs">&lt;/p>
&lt;p>The solution to the problem is manually ESM-flagging the plugin SSEEdit so the ONAM list is populated. The plugin will still be an ESL and not count toward the 256 plugin limit, so there is no downside to doing this.&lt;/p>
&lt;ul>
&lt;li>Right-click the &lt;strong>Record Flags&lt;/strong> and also check the box for &lt;strong>ESM&lt;/strong> in addition to the &lt;strong>ESL&lt;/strong> flag.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/esl-esm.png" alt="ESL ESM">&lt;/p>
&lt;p>We now have an ESM-flagged ESL. Close SSEEdit and save your change.&lt;/p>
&lt;p>When you re-open the plugin in SSEEdit and check the &lt;strong>Plugin Header&lt;/strong>, you will see that SSEEdit automatically added the affected temporary ref to the list.&lt;/p>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/onam-added.png" alt="ONAM Added">&lt;/p>
&lt;p>Finally, jump back into the game, &lt;code>coc whiteruntempleofkynareth&lt;/code>, and, sure enough, the plugin works again.&lt;/p>
&lt;h2 id="esls-and-cells">ESLs and Cells&lt;/h2>
&lt;p>Any plugin can be turned into an ESL (ESP-FE or full ESL) &lt;u>with one exception&lt;/u>. A demonstration is in order.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
Unfortunately, for this example the easiest option is to simply use the &lt;strong>Myrwatch Tower&lt;/strong> creation, so if you happen to not own it, you will only be to read this section as opposed to following along.
&lt;/div>
&lt;ul>
&lt;li>Double-click the &lt;strong>Creation Club&lt;/strong> separator in MO2 and enable the &lt;strong>Myrwatch&lt;/strong> creation.&lt;/li>
&lt;li>Load up your plugins in &lt;strong>SSEEdit&lt;/strong> and double-click &lt;strong>cceejsse002-tower.esl&lt;/strong> to expand it.&lt;/li>
&lt;/ul>
&lt;h3 id="cell-records">CELL Records&lt;/h3>
&lt;p>In the Myrwatch plugin, you can see two types of records: &lt;strong>Cells&lt;/strong> (interior locations) and &lt;strong>Worldspaces&lt;/strong> (the outside world). Both consist of &lt;strong>CELL&lt;/strong> records populated by persistent and temporary references.&lt;/p>
&lt;ul>
&lt;li>Expand the &lt;strong>Cell&lt;/strong> record category and navigate to &lt;strong>Block 7&lt;/strong> &amp;raquo; &lt;strong>Sub-Block 0&lt;/strong> &amp;raquo; &lt;code>[FE00183B] ccEEJSSE002MageTowerMain &amp;quot;Myrwatch&amp;quot;&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>This is a CELL record (see the &lt;strong>Signature&lt;/strong> at the top).&lt;/p>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/myrwatch-cell-record.png" alt="CELL Record">&lt;/p>
&lt;p>We will use this CELL as our guinea pig. Remember that you can quickly jump to any cell using the &lt;code>coc&lt;/code> command if you have the cell&amp;rsquo;s &lt;strong>Editor ID&lt;/strong> which is &lt;code>ccEEJSSE002MageTowerMain&lt;/code> in this case.&lt;/p>
&lt;ul>
&lt;li>Launch the game and run &lt;code>coc ccEEJSSE002MageTowerMain&lt;/code> through the console.&lt;/li>
&lt;/ul>
&lt;p>Yep, we are in the tower. It looks really comfy, I hope nothing bad will happen to it.&lt;/p>
&lt;ul>
&lt;li>Quickly close the game by running &lt;code>qqq&lt;/code> through the console.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/myrwatch.jpg" alt="Myrwatch">&lt;/p>
&lt;h3 id="creating-appleesl">Creating Apple.esl&lt;/h3>
&lt;p>Now it is time to horribly break the CELL for demonstration purposes.&lt;/p>
&lt;ul>
&lt;li>Jump back into SSEEdit and find the &lt;code>ccEEJSSE002MageTowerMain&lt;/code> CELL record again.
&lt;ul>
&lt;li>&lt;em>Tip: Search for the Form ID to quickly focus on the record.&lt;/em>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Expand the &lt;strong>CELL&lt;/strong> record and look at the &lt;strong>Temporary&lt;/strong> references inside.&lt;/li>
&lt;li>Select the random &lt;code>FoodApple02 &amp;quot;Green Apple&amp;quot; [ALCH:00064B2F]&lt;/code> near the top.&lt;/li>
&lt;/ul>
&lt;p>An apple a day is important and all that, but what if you prefer red over green apples? We can easily switch that out.&lt;/p>
&lt;ul>
&lt;li>Right-click the top of the &lt;strong>cceejsse002-tower.esl&lt;/strong> in the right pane and select &lt;strong>Copy as override into&lt;/strong>.&lt;/li>
&lt;li>Confirm when the warning window pops up.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/myrwatch-cell-new-layer.png" alt="CELL Record">&lt;/p>
&lt;p>So, given that we are modifying a single record, using the ESL format seems appropriate. When creating an ESL plugin through SSEEdit, it will automatically be given the ESM flag as well so that any modifying temporary refs are added to the ONAM list.&lt;/p>
&lt;ul>
&lt;li>Pick the bottom option, &lt;strong>&amp;lt;new file&amp;gt;.esl&lt;/strong>, and name your new plugin &lt;strong>Apple&lt;/strong> (or something equally creative).&lt;/li>
&lt;/ul>
&lt;p>In our new &lt;strong>Apple.esl&lt;/strong> layer we can now modify the base object placed in this temporary reference.&lt;/p>
&lt;ul>
&lt;li>Double-click the &lt;code>FoodApple02 &amp;quot;Green Apple&amp;quot; [ALCH:00064B2F]&lt;/code> base object in the new layer.&lt;/li>
&lt;li>Click the little arrow to expand the drop-down menu and select &lt;code>FoodApple &amp;quot;Red Apple&amp;quot; [ALCH:00064B2E]&lt;/code> from the list.&lt;/li>
&lt;li>Close SSEEdit and save your new plugin.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/change-base-record.png" alt="CELL Record">&lt;/p>
&lt;h3 id="gazing-into-the-abyss">Gazing into the abyss&lt;/h3>
&lt;p>Back in MO2, the &lt;em>&lt;strong>Overwrite&lt;/strong>&lt;/em> will have caught your new plugin. Since we are (spoiler alert) not going to keep it, you can leave it in its temporary location, but do remember to activate the plugin in the load order.&lt;/p>
&lt;p>Once again, jump ingame and &lt;code>coc ccEEJSSE002MageTowerMain&lt;/code>.&lt;/p>
&lt;p>Oh, no.&lt;/p>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/myrwatch-broken.jpg" alt="Myrwatch">&lt;/p>
&lt;h3 id="conclusion">Conclusion&lt;/h3>
&lt;p>After closing the game with &lt;code>qqq&lt;/code>, you can delete &lt;strong>Apple.esl&lt;/strong> from your &lt;em>&lt;strong>Overwrite&lt;/strong>&lt;/em> simply because it could never work. Also remember to disable &lt;strong>Myrwatch&lt;/strong> again in the mod order.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
Modifying a CELL that is created in an ESL utterly breaks that CELL. This is unfixable.
&lt;/div>
&lt;p>In other words, while a CELL record &lt;u>can&lt;/u> be created in an ESL, it &lt;u>cannot&lt;/u> be overwritten. This has important implications when ESL-ifying plugins to circumvent the 256 ESP/ESM limit because it means that you should generally &lt;strong>avoid ESL-ifying any plugin in which a new CELL is created&lt;/strong>.&lt;/p>
&lt;div class="alert alert-info" role="alert">
There is a &lt;a href="https://www.nexusmods.com/skyrimspecialedition/mods/64108">mod&lt;/a> which duplicates all Myrwatch CELLs in a regular ESM which is used by mods modifying the tower to circumvent the problem. The only creations that add new CELLs as full ESLs are Myrwatch and Sunder &amp;amp; Wraithguard.
&lt;/div>
&lt;h2 id="renumbering-form-ids">Renumbering Form IDs&lt;/h2>
&lt;p>One final concern about ESL plugins concerns the Form ID format. This is only an issue when &lt;u>converting&lt;/u> a regular ESM or ESP into an ESL. Remember that an ESP has a Form ID with six out of eight unique characters, i.e., &lt;code>xx03A88F&lt;/code>, while an ESL&amp;rsquo;s Index extends to the fifth character, i.e., &lt;code>xxxxx88F&lt;/code>.&lt;/p>
&lt;p>When you want to turn &lt;u>an ESP that adds new Forms&lt;/u> into an ESL, you have to &lt;strong>compact Form IDs&lt;/strong> before you can add the ESL flag.&lt;/p>
&lt;p>We need an example mod for this:&lt;/p>
&lt;ul>
&lt;li>Create a new separator in Mod Organizer 2 and name it &lt;strong>Grass Overhaul&lt;/strong>.&lt;/li>
&lt;li>Leave it at the bottom of the mod order.&lt;/li>
&lt;li>Download and install &lt;a href="https://www.nexusmods.com/skyrimspecialedition/mods/12431?tab=files">No Grass In Caves&lt;/a>.
&lt;ul>
&lt;li>&lt;em>Grab the first main file, without compatibility for lighting mods.&lt;/em>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="alert alert-info" role="alert">
This mod removes grass from caves (duh) because grass mods tend to increase the density. More grass also means more grass in very dark areas where the lack of ambient light causes the grass to look black.
&lt;/div>
&lt;h3 id="compacting-form-ids-1">Compacting Form IDs 1&lt;/h3>
&lt;p>After installing and activating the new mod, another plugin (a normal ESP) will show up in the load order.&lt;/p>
&lt;p>&lt;strong>Go ahead and load up your plugins in SSEEdit.&lt;/strong>&lt;/p>
&lt;p>Checking our new mod, we will notice that it not only removes grass, but also adds new flora to make up for that. Statics like these plants are lit differently from grass (they can be affected by point lighting, cast by, for example, a torch and will not look black in low ambient light areas).&lt;/p>
&lt;p>As we would expect, the Form IDs for the temporary references added by the mod begin with the plugin&amp;rsquo;s two-character Index, &lt;code>08&lt;/code>.&lt;/p>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/esp-form-ids.png" alt="ESP Forms">&lt;/p>
&lt;p>Trying to add the ESL flag and save the plugin would cause SSEEdit to throw the following error:&lt;/p>
&lt;pre>&lt;code>[00:00] Saving: NoGrassINCaves.esp.save.2023_07_04_10_44_50
[00:00] Error saving NoGrassINCaves.esp.save.2023_07_04_10_44_50: Record [REFR:080148ED] (places TreeSwordFern01 [TREE:000B73B8] in GRUP Cell Temporary Children of BlindCliffCaveCOC [CELL:00021EFA] (in BlindCliffCaveWorld &amp;quot;Blind Cliff Cave&amp;quot; [WRLD:00020DCB] at -36,4)) has invalid ObjectID 0148ED for a light module. You will not be able to save this file with ESL flag active
[00:00] Errors have occured. At least one file was not saved.
&lt;/code>&lt;/pre>&lt;p>The Form IDs are, in other words, not the correct format for ESL space. Thankfully, this is something SSEEdit can adjust for us.&lt;/p>
&lt;ul>
&lt;li>Right-click the plugin in the left pane and click &lt;strong>Compact FormIDs for ESL&lt;/strong>.&lt;/li>
&lt;li>Confirm when the warning window pops up.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/compact-form-ids.png" alt="Compact Form IDs">&lt;/p>
&lt;h3 id="risks-of-compacting">Risks of Compacting&lt;/h3>
&lt;p>Another warning will follow and this one merits some discussion.&lt;/p>
&lt;p>Remember that records are identified by their Form IDs, also by other plugins. If we renumber the Form IDs here and later install a mod that touches the hand-placed flora from No Grass In Caves that second mod would dissolve into a mess of errors because it would be unable to locate the original records it was trying to edit. For example, it was looking for &lt;code>08002FE7&lt;/code> but that Form is now &lt;code>FE00381E&lt;/code>.&lt;/p>
&lt;div class="alert alert-info" role="alert">
Compacting a plugin&amp;rsquo;s Form IDs will break any plugins that it is a master for.
&lt;/div>
&lt;p>There are two possible solutions:&lt;/p>
&lt;ol>
&lt;li>Avoid compacting Form IDs in plugins that are likely a master to many other plugins (i.e., that have many patches).&lt;/li>
&lt;li>Compact Form IDs in plugins only when their dependent plugins are also present in SSEEdit at the time.&lt;/li>
&lt;/ol>
&lt;p>In the latter case, those dependent plugins would be updated automatically.&lt;/p>
&lt;h3 id="compacting-form-ids-2">Compacting Form IDs 2&lt;/h3>
&lt;p>Since I never encountered a mod that modifies No Grass In Caves&amp;rsquo; hand-placed flora, I will go ahead and click &lt;strong>Yes&lt;/strong> to the warning about changing Form ID. The process will only take a few seconds.&lt;/p>
&lt;p>Afterwards, you can add the ESL flag in the &lt;strong>Plugin Header&lt;/strong>. Close SSEEdit and save your changes.&lt;/p>
&lt;h3 id="documenting-changes">Documenting Changes&lt;/h3>
&lt;p>ESL-flagging a plugin (regardless of whether Form IDs are compacted) obviously always requires modifying the original plugin which is something we could so far avoid by overwriting with new plugins. Of course, any changes you make to a given plugin are lost upon updating.&lt;/p>
&lt;p>This does not necessarily mean that you should never change an original plugin (though try to do it only if there is no other option), but I recommend documenting the changes you made.&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;strong>This step is optional.&lt;/strong> I understand that I am unusually obsessed with documenting everything, but I do strongly believe that it is worth the effort. You cannot possibly remember all your custom edits for several hundreds or thousands of mods.
&lt;/div>
&lt;p>Mod Organizer 2 features a very helpful &lt;strong>Notes&lt;/strong> tab for each mod.&lt;/p>
&lt;ul>
&lt;li>Double-click &lt;strong>No Grass In Caves&lt;/strong> in your mod order and switch to the &lt;strong>Notes&lt;/strong> tab on the far right.&lt;/li>
&lt;/ul>
&lt;p>There are two empty spaces here for notes. The bottom one offers ample room for detailed jottings, whatever you are looking to document, while the top one is better suited to a few short keywords which will be visible at a glance in the mod order&amp;rsquo;s &lt;strong>Notes&lt;/strong> column.&lt;/p>
&lt;ul>
&lt;li>Add &lt;code>Compacted Form IDs and ESL-flagged the plugin.&lt;/code> to the space at the top.&lt;/li>
&lt;/ul>
&lt;p>Once you close the window, the note will show up in your mod order.&lt;/p>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/ngic-mo2-note.png" alt="Compact Form IDs">&lt;/p>
&lt;hr>
&lt;h4 id="please-continue-with-step-5bgcore-modulestep5">Please continue with &lt;a href="https://thephoenixflavour.com/bg/core-module/step5/">Step 5&lt;/a>.&lt;/h4></description></item><item><title>Bg: Step 5</title><link>https://thephoenixflavour.com/bg/core-module/step5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://thephoenixflavour.com/bg/core-module/step5/</guid><description>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Summary&lt;/h4>
&lt;blockquote>
&lt;p>This step covers the three types of conflicts between plugins and how to address them.&lt;/p>
&lt;/blockquote>
&lt;/div>
&lt;h2 id="understanding-conflicts">Understanding Conflicts&lt;/h2>
&lt;p>Plugins interact with each other in various ways. As we have learned, if multiple plugins modify the same record, the game will only consider the changes from the plugin which loads last.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
Multiple plugins making different changes to the same record create a &lt;strong>conflict&lt;/strong>.
&lt;/div>
&lt;p>A load order must always be checked for conflicts and many conflicts need to be addressed in some way in a process that is known as conflict resolution. This process can be &lt;em>partially&lt;/em> automated; however, that is not something I will cover in this guide. If you understand manual conflict resolution, you will automatically (hah!) be able to figure out automation tools.&lt;/p>
&lt;div class="alert alert-info" role="alert">
Conflict resolution is one of the most important and most time-consuming steps in building a modded setup, alongside consistency patching and asset management.
&lt;/div>
&lt;p>In this step we will discuss three types of conflicts, when and why they arise, how to recognise and assess them, and how to address them. In order to do so, we need to install a few additional mods first which will provide us with examples.&lt;/p>
&lt;h2 id="example-mods-for-cr">Example Mods for CR&lt;/h2>
&lt;h3 id="mo2-separators">MO2 Separators&lt;/h3>
&lt;p>Because we like doing things systematically and in a clean fashion, we will start by adding a few new separators in Mod Organizer 2 to sort the mods that will be added in the next step:&lt;/p>
&lt;p>&lt;strong>Create the following separators in Mod Organizer 2:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Lighting&lt;/li>
&lt;li>Water&lt;/li>
&lt;/ul>
&lt;p>Move both above the &lt;strong>Grass Overhaul&lt;/strong> separator in the mod order.&lt;/p>
&lt;h3 id="realistic-water-two">Realistic Water Two&lt;/h3>
&lt;p>Realistic Water Two is one of the most popular water overhauls and happens to be my personal favourites. Installing it now does not tether you to RW2, you can always uninstall it and use something else later on.&lt;/p>
&lt;ul>
&lt;li>Download and install &lt;a href="https://www.nexusmods.com/skyrimspecialedition/mods/2182?tab=files">Realistic Water Two&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>Wait, what is that?&lt;/p>
&lt;p>We are looking at our first &lt;strong>FOMOD installer&lt;/strong>. The acronym hails from the Fallout New Vegas days and stands for &lt;strong>F&lt;/strong>allout &lt;strong>Mod&lt;/strong> Archive. It allows for a modular installation which may include optional files like patches. Mods with FOMOD installers are common.&lt;/p>
&lt;ul>
&lt;li>For the time being, simply click &lt;strong>Next&lt;/strong> and &lt;strong>Install&lt;/strong>.&lt;/li>
&lt;li>Drop the mod below the &lt;strong>Water&lt;/strong> separator and activate it.&lt;/li>
&lt;/ul>
&lt;h3 id="relighting-skyrim">Relighting Skyrim&lt;/h3>
&lt;p>Relighting Skyrim is a low-impact lighting overhaul focusing on fixing light sources and adding new ones where vanilla is missing them. Once again, you are free to replace it with a different mod later on.&lt;/p>
&lt;ul>
&lt;li>Download and install &lt;a href="https://www.nexusmods.com/skyrimspecialedition/mods/8586?tab=files">Relighting Skyrim&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>Here is another FOMOD installer.&lt;/p>
&lt;ul>
&lt;li>Click &lt;strong>Install&lt;/strong> to keep the default selections (full version with USSEP support).&lt;/li>
&lt;li>Drop the mod below the &lt;strong>Lighting&lt;/strong> separator and activate it.&lt;/li>
&lt;/ul>
&lt;h3 id="mod-order">Mod Order&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Official Master Files&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Creation Club&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Script Extender&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Essential Mods&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Lighting&lt;/strong>
&lt;ul>
&lt;li>Relighting Skyrim&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Water&lt;/strong>
&lt;ul>
&lt;li>Realistic Water Two&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Grass Overhaul&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3 id="load-order">Load Order&lt;/h3>
&lt;p>Plugins highlighted in &lt;mark>green&lt;/mark> are new additions.&lt;/p>
&lt;ul>
&lt;li>(Official Master Files + Creations)&lt;/li>
&lt;li>&lt;em>&lt;strong>Unofficial Skyrim Special Edition Patch.esp&lt;/strong>&lt;/em>&lt;/li>
&lt;li>&lt;em>&lt;strong>Disable USSEP Book.esl&lt;/strong>&lt;/em>&lt;/li>
&lt;li>&lt;mark>&lt;em>&lt;strong>RealisticWaterTwo - Resources.esm&lt;/strong>&lt;/em>&lt;/mark>&lt;/li>
&lt;li>&lt;mark>RealisticWaterTwo.esp&lt;/mark>&lt;/li>
&lt;li>&lt;em>NoGrassINCaves.esp&lt;/em>&lt;/li>
&lt;li>&lt;mark>RelightingSkyrim_SSE.esp&lt;/mark>&lt;/li>
&lt;/ul>
&lt;p>&lt;font size=2>*Yes, this load order is terrible. That will be the point of the exercise!*&lt;/font>&lt;/p>
&lt;h2 id="finding-conflicts">Finding Conflicts&lt;/h2>
&lt;p>Conflicts can be identified by applying a filter in SSEEdit.&lt;/p>
&lt;ul>
&lt;li>Load up your plugins in SSEEdit.&lt;/li>
&lt;li>Right-click anywhere in the left pane and select &lt;strong>Apply Filter&lt;/strong>.&lt;/li>
&lt;li>Click the &lt;strong>Add&lt;/strong> button at the top to create a new filter.&lt;/li>
&lt;li>Name it &lt;strong>Conflict Resolution&lt;/strong> and click &lt;strong>OK&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;p>Your new filter will be selected automatically. We will want to check the following options:&lt;/p>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/cr-filter.png" alt="CR Filter">&lt;/p>
&lt;div class="alert alert-info" role="alert">
The two options near the top will visualise conflicts which makes finding them infinitely easier. Flattening CELL records helps with viewing the Cell and Worldspace categories without having to click through blocks and sub-blocks.
&lt;/div>
&lt;ul>
&lt;li>Click the &lt;strong>Save&lt;/strong> button at the top to save the new preset.&lt;/li>
&lt;li>Click the &lt;strong>Filter&lt;/strong> button at the bottom to apply it.&lt;/li>
&lt;/ul>
&lt;p>This will take about a minute. You can proceed once the log returns &lt;code>Done: Applying Filter&lt;/code>.&lt;/p>
&lt;h2 id="harmless-conflicts">Harmless Conflicts&lt;/h2>
&lt;p>As you can see, our load order is very colourful now, meaning there are a lot of conflicts.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
Plugin interactions (conflicts) are common and not all conflicts are harmful. In fact, most conflict are fully intentional. The process of reviewing conflicts is not about making everything &amp;ldquo;green&amp;rdquo; in SSEEdit, but assessing which conflicts are &lt;u>not&lt;/u> intentional.
&lt;/div>
&lt;p>Conflict resolution therefore requires an understanding of &lt;u>why&lt;/u> a given plugin is making certain changes and you will run into situations where you simply do not know what an edit means. In such cases, use common sense, refer to the mod page, or ask in the comments.&lt;/p>
&lt;p>Let’s have a look at a harmless conflict that is intentional and requires no intervention:&lt;/p>
&lt;ul>
&lt;li>In SSEEdit, search for the &lt;strong>Form ID&lt;/strong> &lt;code>000695BC&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/find-harmless-conflict.png" alt="Find Harmless Conflict">&lt;/p>
&lt;p>SSEEdit will take us to the matching record which is a reference defined in &lt;em>Skyrim.esm&lt;/em> placing a copy of the static &lt;strong>IceCandleLight01&lt;/strong> in a cell in the &lt;a href="https://en.uesp.net/wiki/Skyrim:Kilkreath_Ruins">Kilkreath Ruins&lt;/a> dungeon.&lt;/p>
&lt;div class="alert alert-info" role="alert">
This record and others are highlighted in red in the left pane because they contain conflicts.
&lt;/div>
&lt;p>Specifically, changes from &lt;strong>Update.esm&lt;/strong> are being overwritten by &lt;strong>RelightingSkyrim_SSE.esp&lt;/strong>:&lt;/p>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/rs-update-conflict.png" alt="Find Harmless Conflict">&lt;/p>
&lt;p>So what in Talos&amp;rsquo; name means &amp;ldquo;Unknown&amp;rdquo; which is where the conflict is located? Nobody knows. Most record types have some of these &amp;ldquo;unknown&amp;rdquo; values and they can be largely ignored. They are data in the plugin which are not decoded / defined in SSEEdit, presumably something generated by the CK.&lt;/p>
&lt;p>Common sense tells us that conflicts between mods and their master files are generally intentional. They would not require the master if they were not trying to change something about it.&lt;/p>
&lt;p>It also tells us that &lt;strong>Relighting Skyrim&lt;/strong> probably has good reasons for modifying data related to light as that is within the scope of the mod. For example, the records below our current example are four copies of &lt;code>IceTorch01NS_FastDesat&lt;/code> placed in the same cell where &lt;strong>Update.esm&lt;/strong> changes the &lt;code>Fade 1.35+/-&lt;/code> value, and this change is overwritten once again by &lt;strong>RelightingSkyrim_SSE.esp&lt;/strong>. That is obviously intentional.&lt;/p>
&lt;p>Finally, we can tell that the reference object (the candle) is being disabled anyway, so even if &lt;strong>Update.esm&lt;/strong> were making relevant changes (i.e. to the position of the candle) it would not matter as it would not show up in game at all.&lt;/p>
&lt;div class="alert alert-success" role="alert">
In conclusion: The conflict is harmless and intentional. There is no cause for action.
&lt;/div>
&lt;h2 id="conflicts-requiring-load-order-changes">Conflicts requiring load order changes&lt;/h2>
&lt;p>As for conflicts which require intervention, there are two subtypes: One can be fixed by changing the load order, the other requires a patch.&lt;/p>
&lt;p>Let us first look at a conflict that can be resolved by adjusting the load order.&lt;/p>
&lt;ul>
&lt;li>In SSEEdit, search for the FormID &lt;code>002C965&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>This will take us to the parent record for the Darkwater Pass worldspace, highlighted in bright red. A conflict!&lt;/p>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/worldspace-conflict.png" alt="Worldspace Conflict">&lt;/p>
&lt;h3 id="cell-record-itms">CELL Record ITMs&lt;/h3>
&lt;p>If you look at the &lt;strong>RelightingSkyrim_SSE.esp&lt;/strong> layer, you will see the grey font and recognise it as an &lt;strong>ITM&lt;/strong> record (identical to master). That means it is a copy of the same record from &lt;strong>Skyrim.esm&lt;/strong> with zero modifications. It currently overwrites &lt;strong>RealisticWaterTwo.esp&lt;/strong>, negating its change to &lt;code>NAM2 - Water&lt;/code>.&lt;/p>
&lt;p>Does that mean Relighting Skyrim is a &amp;ldquo;bad&amp;rdquo; mod because it includes an ITM?&lt;/p>
&lt;p>No. In fact, this ITM is perfectly normal.&lt;/p>
&lt;p>Previously, we discussed that the &lt;strong>Cell&lt;/strong> and &lt;strong>Worldspace&lt;/strong> categories consist of &lt;strong>CELL&lt;/strong> records which in turn contain references.&lt;/p>
&lt;div class="alert alert-info" role="alert">
When a plugin edits a reference it will also contain a copy of the CELL record which the reference is located in.
&lt;/div>
&lt;p>This copy is typically an ITM as nothing is changed within it. A good example is our previously created &lt;strong>Disable USSEP Book.esl&lt;/strong>:&lt;/p>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/cell-record-itms.png" alt="Cell Record ITMs">&lt;/p>
&lt;h3 id="late-loaders">Late Loaders&lt;/h3>
&lt;p>Though CELL record ITMs records are common, the implications are important to understand: Even if a plugin only makes a tiny adjustment to a pebble in a stream somewhere in the Falkreath forest, it &lt;u>will&lt;/u> contain ITM copies of the CELL and the worldspace&amp;rsquo;s parent record where it potentially overwrites other plugins that actually modify the parent record.&lt;/p>
&lt;p>That is exactly what is happening in our initial example, &lt;code>002C965&lt;/code>, where Relighting Skyrim contains an ITM copy of the parent record of the Darkwater Pass worldspace and unnecessarily reverts the Realistic Water Two edit back to vanilla.&lt;/p>
&lt;div class="alert alert-info" role="alert">
Fortunately, the amount of plugins modifying CELL parent records is comparatively small. They are usually found in water, lighting, audio, and map mods.
&lt;/div>
&lt;p>&lt;strong>Realistic Water Two&lt;/strong> is one such mod with numerous edits to parent records. We can easily resolve most potential conflicts by loading the plugin very late in the load order, below other mods which are more likely to contain only ITMs of the same parent records. That way, no conflicts will arise to begin with.&lt;/p>
&lt;div class="alert alert-info" role="alert">
Plugins that are supposed to be placed late in the load order to avoid unnecessary conflicts are referred to as &lt;strong>late loaders&lt;/strong>.
&lt;/div>
&lt;h3 id="load-order-adjustment">Load Order Adjustment&lt;/h3>
&lt;p>Our example conflict between &lt;strong>Relighting Skyrim&lt;/strong> and &lt;strong>Realistic Water Two&lt;/strong> - and a second one in the &lt;em>Frostmere Depths&lt;/em> worldspace - can thus be resolved by simply adjusting the load order.&lt;/p>
&lt;p>The same is true for current conflicts between &lt;strong>Relighting Skyrim&lt;/strong> and &lt;strong>No Grass In Caves&lt;/strong> which you can see if you expand the latter mod&amp;rsquo;s Worldspace section. It adds the &lt;strong>No Grass&lt;/strong> flag to multiple parent records which is negated by ITMs in RS. Switching their load order will allow NGIC to overwrite RS and solve the problem.&lt;/p>
&lt;p>&lt;font size=2>*As you may have noticed, NGIC also has conflicts with RW2 that are not so easily resolved. We will consider those soon.*&lt;/font>&lt;/p>
&lt;ul>
&lt;li>Close &lt;strong>SSEEdit&lt;/strong>.&lt;/li>
&lt;li>Drag and drop &lt;strong>NoGrassINCaves.esp&lt;/strong> &lt;u>below&lt;/u> &lt;strong>RelightingSkyrim_SSE.esp&lt;/strong>.&lt;/li>
&lt;li>Drag and drop &lt;strong>RealisticWaterTwo.esp&lt;/strong> to the bottom of your load order.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/load-order-adjustment.png" alt="Load Order Adjustment">&lt;/p>
&lt;ul>
&lt;li>Reopen SSEEdit.&lt;/li>
&lt;li>Double-click &lt;strong>RealisticWaterTwo.esp&lt;/strong> and check the &lt;strong>Worldspace&lt;/strong> category.&lt;/li>
&lt;/ul>
&lt;p>Both &lt;em>Darkwater Pass&lt;/em> and &lt;em>Frostmere Depths&lt;/em> are now highlighted in yellow, meaning that Realistic Water Two modified the original records without creating conflicts. The &lt;em>BlindCliffCaveWorld&lt;/em> and &lt;em>FallowstoneCaveWorldStart&lt;/em> worldspace parent records have conflicts which will be addressed in the next step.&lt;/p>
&lt;p>Finally, the conflict in &lt;em>DLC2SolstheimWorld&lt;/em> is caused by the Fishing creation which modified, probably accidentally, the parent record. That is annoying, but since the changes are reverted back to vanilla by later plugins, it does not matter.*&lt;/p>
&lt;p>&lt;font size=2>**If you cannot see the conflict with the Fishing creation, you probably enabled the USSEP ModGroup.*&lt;/font>&lt;/p>
&lt;h2 id="conflicts-requiring-patches">Conflicts requiring patches&lt;/h2>
&lt;p>Finally, there are conflicts of the type which are unintentional and can only be resolved by a patch.&lt;/p>
&lt;p>This is the case when multiple plugins modify the same record and you wish to retain changes from several of them: An additional layer must be created where all these changes are consolidated, creating a &lt;strong>patch&lt;/strong>.&lt;/p>
&lt;ul>
&lt;li>Double-click &lt;strong>NoGrassInCaves.esp&lt;/strong> in the left pane.&lt;/li>
&lt;li>Expand the &lt;strong>Worldspace&lt;/strong> category.&lt;/li>
&lt;/ul>
&lt;p>Here we can see that nearly all parent records in this plugin have conflicts though it is winning most of them without creating conflicts (green font on yellow background). If you check the green records, you can see that No Grass In Caves is also a typical late loader as it does modify the parent records and is correctly overwriting the ITMs in other plugins.&lt;/p>
&lt;p>However, conflicts do appear in two of the parent records: &lt;em>BlindCliffCaveWorld&lt;/em> and &lt;em>FallowstoneCaveWorldStart&lt;/em>. Looking at these records, you will notice that both No Grass In Caves and Realistic Water Two are making relevant changes, but Realistic Water Two is winning the conflict because it is placed lower in the load order. If the positions were reversed, No Grass In Caves would win, but then the water changes would not appear in game.&lt;/p>
&lt;p>&lt;strong>In order for both mods to function as intended, a patch is required.&lt;/strong>&lt;/p>
&lt;h3 id="creating-a-patch">Creating a patch&lt;/h3>
&lt;p>Just as we did earlier to disable the USSEP book, we need to create a new layer (a new plugin) to apply our changes to.&lt;/p>
&lt;ul>
&lt;li>Select one of the two worldspace parent records containing a conflict.&lt;/li>
&lt;li>Right-click the &lt;strong>RealisticWaterTwo.esp&lt;/strong> layer (column) in the right pane.&lt;/li>
&lt;li>Select &lt;strong>Copy as override into&lt;/strong> and confirm when the warning pops up.&lt;/li>
&lt;li>In the plugin selection window, select the &lt;strong>&amp;lt;new file&amp;gt;.esp&lt;/strong> template &lt;u>with the ESL flag&lt;/u> and click &lt;strong>OK&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;p>At this point, we have two options: Either we create a &lt;strong>Conflict Resolution Patch.esp&lt;/strong> where this and future conflicts are collected and resolved. This is a common practice and one that I used for a long time. However, I have since come to the conclusion that it is better to create many separate patches instead.&lt;/p>
&lt;p>Why is that?&lt;/p>
&lt;p>&lt;strong>Separate patches are much easier to manage.&lt;/strong> When mods are removed, you do not have to modify one big plugin, removing references and cleaning masters. You only have to disable the specific patches for it. They are also easier to update when a mod was updated.&lt;/p>
&lt;p>Because we can ESL-flag these small patches, we can literally create hundreds and thousands of tiny patches without ever having to merge them together.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
In conclusion: I strongly recommend creating &lt;u>separate&lt;/u> patches to address conflicts between different mods.
&lt;/div>
&lt;ul>
&lt;li>Name your new plugin &lt;strong>Realistic Water Two - No Grass In Caves Patch&lt;/strong> and click &lt;strong>OK&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;p>Of course, there is still a conflict in our newly created patch. To resolve this, simply drag (forward) the changes under &lt;code>DATA - Flags (sorted)&lt;/code> from the &lt;strong>NoGrassInCaves.esp&lt;/strong> column into our new patch:&lt;/p>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/resolve-worldspace-conflict.png" alt="Resolve Worldspace Conflict">&lt;/p>
&lt;p>The record should now be displayed in green. (The copy in the expanded &lt;strong>NoGrassInCaves.esp&lt;/strong> plugin is still red, but that is because the UI does not update everywhere. If you click on it, the conflict is shown as resolved there, too).&lt;/p>
&lt;p>Now repeat the process for the second conflicting parent record. When choosing where to create a new layer, do not select a new plugin, but use the existing patch instead.&lt;/p>
&lt;p>&lt;img src="https://thephoenixflavour.com/Pictures/bg/core-module/copy-into-patch.png" alt="Resolve Worldspace Conflict">&lt;/p>
&lt;p>Finally, forward the remaining edit in the second record into the patch plugin. All is pretty and green now.&lt;/p>
&lt;p>Close &lt;strong>SSEEdit&lt;/strong> and click &lt;strong>OK&lt;/strong> to save your new plugin.&lt;/p>
&lt;h3 id="cleanup">Cleanup&lt;/h3>
&lt;p>As usual, the Mod Organizer 2 caught our new plugin.&lt;/p>
&lt;ul>
&lt;li>Right-click the &lt;em>&lt;strong>Overwrite&lt;/strong>&lt;/em> and select &lt;strong>Create Mod&lt;/strong>.&lt;/li>
&lt;li>Enter &lt;strong>Realistic Water Two - No Grass In Caves Patch&lt;/strong> as the name and click &lt;strong>OK&lt;/strong>.&lt;/li>
&lt;li>Leave the new mod &lt;u>below&lt;/u> &lt;strong>Realistic Water Two&lt;/strong> and activate it.&lt;/li>
&lt;/ul>
&lt;p>In the load order, the new plugin will appear at the bottom automatically, located below both its masters.&lt;/p>
&lt;p>In the &lt;strong>Notes&lt;/strong> tab in MO2, I added a quick &lt;code>Resolves minor worldspace parent record conflicts.&lt;/code> for the new patch to remind myself of what it does. Once you have a couple hundred custom patches flying around you will be very grateful to your past self for having some documentation, trust me on that.&lt;/p>
&lt;h2 id="a-note-on-loot">A Note on LOOT&lt;/h2>
&lt;div class="alert alert-info" role="alert">
The following section discusses my views on a tool called LOOT. Feel free to move on to &lt;a href="https://thephoenixflavour.com/bg/core-module/step6/">Step 6&lt;/a> if you are not interested.
&lt;/div>
&lt;p>By now, you may have been wondering when I was going to mention LOOT. Is that not how load order is managed?&lt;/p>
&lt;p>Okay, here is the thing.&lt;/p>
&lt;p>&lt;strong>Figuring out the ideal load order is hard, actually.&lt;/strong> It is time-consuming, especially for large load orders - TPF has well over 1,000 plugins, and it is far from the biggest setup out there. I spend a lot of time, hours upon hours, in SSEEdit, looking at conflicts to figure out which are harmless, which can be resolved through load order adjustments, and which require patches.&lt;/p>
&lt;p>It is thus unsurprising that efforts have been made to automate this process. The tool BOSS was made for sorting plugins in the Oblivion modding days; it has since been superseded by LOOT.&lt;/p>
&lt;p>Drawing on a user-created masterlist, LOOT attempts to sort your plugins in a way that minimises conflicts. This is inherently imperfect as it would be impossible to create a database accounting for every single mod and possible conflict.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
LOOT is capable of one thing: Solving load order conflicts &lt;u>if&lt;/u> the conflict in question is on the masterlist. LOOT cannot create patches or even discover conflicts by itself.
&lt;/div>
&lt;p>That does not mean LOOT is bad, period.&lt;/p>
&lt;p>&lt;strong>What is bad is the widespread notion that modding = installing mods &amp;raquo; running LOOT &amp;raquo; playing the game.&lt;/strong>&lt;/p>
&lt;p>You can observe the result of this idea every day on the Skyrim modding subreddit, in Nexus comments, on various Discord servers. It is unfortunately reinforced by many mod authors who recommend running LOOT on their mod pages without clarifying that simply running LOOT does not a functional modded setup make. Plenty of &amp;ldquo;modding guides&amp;rdquo; further perpetuate this idea.&lt;/p>
&lt;p>👏 &lt;strong>LOOT will not fix your load order.&lt;/strong> 👏&lt;/p>
&lt;p>That being said, LOOT &lt;u>can&lt;/u> speed up the process of fixing your load order by improving your baseline. Some of the most talented mod authors and list curators I know are using LOOT with a multitude of custom rules to manage their load order and consider this the most efficient way.&lt;/p>
&lt;p>&lt;font size=2>*I do want to stress that LOOT was never &lt;u>marketed&lt;/u> as this magical fix-all solution. It is the community hivemind that has portrayed it as such.*&lt;/font>&lt;/p>
&lt;div class="alert alert-info" role="alert">
This guide will use LOOT later on, though not for load order management. I personally do not consider custom LOOT sorting rules, groups, etc worth the effort which is my &lt;u>subjective opinion based on my own experiences&lt;/u> and not an objective fact. However, since I happen to be writing this guide, my subjective opinions &lt;em>are&lt;/em> relevant.
&lt;/div>
&lt;hr>
&lt;h4 id="please-continue-with-step-6bgcore-modulestep6">Please continue with &lt;a href="https://thephoenixflavour.com/bg/core-module/step6/">Step 6&lt;/a>.&lt;/h4></description></item></channel></rss>